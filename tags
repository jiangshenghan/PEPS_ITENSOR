!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
C4_symmetrized_tensor	simple_update/simple_update.cc	/^void C4_symmetrized_tensor(IQTensor &site_tensor)$/;"	f	signature:(IQTensor &site_tensor)
C4_symmetrized_tensor	simple_update/simple_update.h	/^void C4_symmetrized_tensor(IQTensor &site_tensor);$/;"	p	signature:(IQTensor &site_tensor)
CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<IQIndex> &sz_legs): valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<IQIndex> &sz_legs)
CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<IndexSpin> &spin_legs): spin_legs_(spin_legs), valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<IndexSpin> &spin_legs)
CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<int> &spins, const std::vector<Arrow> &dirs): valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<int> &spins, const std::vector<Arrow> &dirs)
CGTensors	peps_utilities/cgtensor.h	/^        CGTensors() {}$/;"	f	class:CGTensors	access:public	signature:()
CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<IQIndex> &sz_legs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IQIndex> &sz_legs)
CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<IndexSpin> &spin_legs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IndexSpin> &spin_legs)
CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<int> &spins, const std::vector<Arrow> &dirs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<int> &spins, const std::vector<Arrow> &dirs)
CGTensors	peps_utilities/cgtensor.h	/^class CGTensors$/;"	c
CGTensors::CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<IQIndex> &sz_legs): valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<IQIndex> &sz_legs)
CGTensors::CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<IndexSpin> &spin_legs): spin_legs_(spin_legs), valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<IndexSpin> &spin_legs)
CGTensors::CGTensors	peps_utilities/cgtensor.cc	/^CGTensors::CGTensors(const std::vector<int> &spins, const std::vector<Arrow> &dirs): valid_(false)$/;"	f	class:CGTensors	signature:(const std::vector<int> &spins, const std::vector<Arrow> &dirs)
CGTensors::CGTensors	peps_utilities/cgtensor.h	/^        CGTensors() {}$/;"	f	class:CGTensors	access:public	signature:()
CGTensors::CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<IQIndex> &sz_legs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IQIndex> &sz_legs)
CGTensors::CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<IndexSpin> &spin_legs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IndexSpin> &spin_legs)
CGTensors::CGTensors	peps_utilities/cgtensor.h	/^        CGTensors(const std::vector<int> &spins, const std::vector<Arrow> &dirs);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<int> &spins, const std::vector<Arrow> &dirs)
CGTensors::K	peps_utilities/cgtensor.h	/^        const std::vector<IQTensor> &K() const { return K_; }$/;"	f	class:CGTensors	access:public	signature:() const
CGTensors::K_	peps_utilities/cgtensor.h	/^        std::vector<IQTensor> K_;$/;"	m	class:CGTensors	access:private
CGTensors::init	peps_utilities/cgtensor.cc	/^void CGTensors::init()$/;"	f	class:CGTensors	signature:()
CGTensors::init	peps_utilities/cgtensor.h	/^        void init();$/;"	p	class:CGTensors	access:public	signature:()
CGTensors::iqindice	peps_utilities/cgtensor.h	/^        const IQIndex &iqindice(int i) const { return spin_legs_[i].leg(); }$/;"	f	class:CGTensors	access:public	signature:(int i) const
CGTensors::obtain_CG	peps_utilities/cgtensor.cc	/^IQTensor CGTensors::obtain_CG(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)$/;"	f	class:CGTensors	signature:(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)
CGTensors::obtain_CG	peps_utilities/cgtensor.h	/^        IQTensor obtain_CG(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3);$/;"	p	class:CGTensors	access:public	signature:(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)
CGTensors::obtain_K	peps_utilities/cgtensor.cc	/^bool CGTensors::obtain_K(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)$/;"	f	class:CGTensors	signature:(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)
CGTensors::obtain_K	peps_utilities/cgtensor.h	/^        bool obtain_K(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)
CGTensors::spin_indices	peps_utilities/cgtensor.h	/^        const std::vector<IndexSpin> &spin_indices() const { return spin_legs_; }$/;"	f	class:CGTensors	access:public	signature:() const
CGTensors::spin_legs_	peps_utilities/cgtensor.h	/^        std::vector<IndexSpin> spin_legs_;$/;"	m	class:CGTensors	access:private
CGTensors::valid	peps_utilities/cgtensor.h	/^        bool valid() { return valid_; }$/;"	f	class:CGTensors	access:public	signature:()
CGTensors::valid_	peps_utilities/cgtensor.h	/^        bool valid_;$/;"	m	class:CGTensors	access:private
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/boundary_theory/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/execute/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/lattice/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/peps/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/peps_ansatz/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/peps_utilities/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/simple_update/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_BINARY_DIR	build/test/Makefile	/^CMAKE_BINARY_DIR = \/home\/jiangsb\/code\/peps_itensor\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/boundary_theory/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/execute/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/lattice/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/peps/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/peps_ansatz/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/peps_utilities/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/simple_update/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/test/Makefile	/^CMAKE_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	build/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/boundary_theory/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/execute/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/lattice/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/peps/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/peps_ansatz/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/peps_utilities/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/simple_update/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	build/test/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/public\/cmake\/2.8.9\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/boundary_theory/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/execute/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/lattice/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/peps/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/peps_ansatz/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/peps_utilities/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/simple_update/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
CMAKE_SOURCE_DIR	build/test/Makefile	/^CMAKE_SOURCE_DIR = \/home\/jiangsb\/code\/peps_itensor$/;"	m
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	26;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	31;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	17;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	82;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	54;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	91;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	68;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
D	peps/peps.h	/^        int D() const$/;"	f	class:PEPSt	access:public	signature:() const
D	peps/peps_indexset.h	/^        inline const int &D() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
DEC	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
DEC	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
D_	peps/peps.h	/^        int d_, D_;$/;"	m	class:PEPSt	access:private
D_	peps/peps_indexset.h	/^        int d_, D_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<IQTensor>::Double_Layer_PEPSt(const Lattice_Base &lattice);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<IQTensor>::Double_Layer_PEPSt(const PEPSt<IQTensor> &peps);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const PEPSt<IQTensor> &peps)
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<ITensor>::Double_Layer_PEPSt(const Lattice_Base &lattice);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<ITensor>::Double_Layer_PEPSt(const PEPSt<ITensor> &peps);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const PEPSt<ITensor> &peps)
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<TensorT>::Double_Layer_PEPSt(const Lattice_Base &lattice):$/;"	f	class:Double_Layer_PEPSt	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<TensorT>::Double_Layer_PEPSt(const PEPSt<TensorT> &peps):$/;"	f	class:Double_Layer_PEPSt	signature:(const PEPSt<TensorT> &peps)
Double_Layer_PEPSt	peps/double_layer_peps.h	/^        Double_Layer_PEPSt(const PEPSt<TensorT> &peps);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(const PEPSt<TensorT> &peps)
Double_Layer_PEPSt	peps/double_layer_peps.h	/^class Double_Layer_PEPSt$/;"	c
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<IQTensor>::Double_Layer_PEPSt(const Lattice_Base &lattice);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<IQTensor>::Double_Layer_PEPSt(const PEPSt<IQTensor> &peps);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const PEPSt<IQTensor> &peps)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<ITensor>::Double_Layer_PEPSt(const Lattice_Base &lattice);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<ITensor>::Double_Layer_PEPSt(const PEPSt<ITensor> &peps);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(const PEPSt<ITensor> &peps)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<TensorT>::Double_Layer_PEPSt(const Lattice_Base &lattice):$/;"	f	class:Double_Layer_PEPSt	signature:(const Lattice_Base &lattice)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.cc	/^Double_Layer_PEPSt<TensorT>::Double_Layer_PEPSt(const PEPSt<TensorT> &peps):$/;"	f	class:Double_Layer_PEPSt	signature:(const PEPSt<TensorT> &peps)
Double_Layer_PEPSt::Double_Layer_PEPSt	peps/double_layer_peps.h	/^        Double_Layer_PEPSt(const PEPSt<TensorT> &peps);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(const PEPSt<TensorT> &peps)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename IQTensor::CombinerT Double_Layer_PEPSt<IQTensor>::decombine_double_virt_indice(int sitei, const IQTensor::IndexT &double_virt_ind, IQTensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(int sitei, const IQTensor::IndexT &double_virt_ind, IQTensor::IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename IQTensor::CombinerT Double_Layer_PEPSt<IQTensor>::decombine_double_virt_indice(std::array<int,2> sites_no, IQTensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::array<int,2> sites_no, IQTensor::IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename ITensor::CombinerT Double_Layer_PEPSt<ITensor>::decombine_double_virt_indice(int sitei, const ITensor::IndexT &double_virt_ind, ITensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(int sitei, const ITensor::IndexT &double_virt_ind, ITensor::IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename ITensor::CombinerT Double_Layer_PEPSt<ITensor>::decombine_double_virt_indice(std::array<int,2> sites_no, ITensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::array<int,2> sites_no, ITensor::IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename TensorT::CombinerT Double_Layer_PEPSt<TensorT>::decombine_double_virt_indice(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)$/;"	f	class:Double_Layer_PEPSt	signature:(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename TensorT::CombinerT Double_Layer_PEPSt<TensorT>::decombine_double_virt_indice(std::array<int,2> sites_no, IndexT &lower_ind)$/;"	f	class:Double_Layer_PEPSt	signature:(std::array<int,2> sites_no, IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.h	/^        CombinerT decombine_double_virt_indice(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)
Double_Layer_PEPSt::decombine_double_virt_indice	peps/double_layer_peps.h	/^        CombinerT decombine_double_virt_indice(std::array<int,2> sites_no, IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::array<int,2> sites_no, IndexT &lower_ind)
Double_Layer_PEPSt::double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^IQTensor Double_Layer_PEPSt<IQTensor>::double_layer_tensor_from_lower_upper_tensors(IQTensor lower_tensor, IQTensor upper_tensor, const std::vector<IQTensor::CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(IQTensor lower_tensor, IQTensor upper_tensor, const std::vector<IQTensor::CombinerT> &pair_combiners)
Double_Layer_PEPSt::double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^ITensor Double_Layer_PEPSt<ITensor>::double_layer_tensor_from_lower_upper_tensors(ITensor lower_tensor, ITensor upper_tensor, const std::vector<ITensor::CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(ITensor lower_tensor, ITensor upper_tensor, const std::vector<ITensor::CombinerT> &pair_combiners)
Double_Layer_PEPSt::double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^TensorT Double_Layer_PEPSt<TensorT>::double_layer_tensor_from_lower_upper_tensors(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)$/;"	f	class:Double_Layer_PEPSt	signature:(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)
Double_Layer_PEPSt::double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.h	/^        TensorT double_layer_tensor_from_lower_upper_tensors(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)
Double_Layer_PEPSt::double_layer_tensors	peps/double_layer_peps.h	/^        const TensorT &double_layer_tensors(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
Double_Layer_PEPSt::double_layer_tensors	peps/double_layer_peps.h	/^        const std::vector<TensorT> &double_layer_tensors() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
Double_Layer_PEPSt::double_layer_tensors_	peps/double_layer_peps.h	/^        std::vector<TensorT> double_layer_tensors_;$/;"	m	class:Double_Layer_PEPSt	access:protected
Double_Layer_PEPSt::lattice	peps/double_layer_peps.h	/^        const Lattice_Base &lattice() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
Double_Layer_PEPSt::obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
Double_Layer_PEPSt::obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
Double_Layer_PEPSt::obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_layered_tensors_with_combined_legs()$/;"	f	class:Double_Layer_PEPSt	signature:()
Double_Layer_PEPSt::obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.h	/^        void obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	access:public	signature:()
Double_Layer_PEPSt::obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_peps_sandwich_single_site_operators(std::vector<IQTensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<IQTensor>& sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<IQTensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<IQTensor>& sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_peps_sandwich_single_site_operators(std::vector<ITensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<ITensor>& sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<ITensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<ITensor>& sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_peps_sandwich_single_site_operators(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT>& sandwiched_tensors)$/;"	f	class:Double_Layer_PEPSt	signature:(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT>& sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.h	/^        void obtain_peps_sandwich_single_site_operators(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<IQTensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<IQTensor> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<TPOt<IQTensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<IQTensor> &sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<ITensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<ITensor> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<TPOt<ITensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<ITensor> &sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)$/;"	f	class:Double_Layer_PEPSt	signature:(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
Double_Layer_PEPSt::obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.h	/^        void obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
Double_Layer_PEPSt::obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
Double_Layer_PEPSt::obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
Double_Layer_PEPSt::obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_single_layer_tensors()$/;"	f	class:Double_Layer_PEPSt	signature:()
Double_Layer_PEPSt::obtain_single_layer_tensors	peps/double_layer_peps.h	/^        void obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	access:public	signature:()
Double_Layer_PEPSt::phys_leg	peps/double_layer_peps.h	/^        const IndexT &phys_leg(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
Double_Layer_PEPSt::read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::istream &s)
Double_Layer_PEPSt::read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::istream &s)
Double_Layer_PEPSt::read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:Double_Layer_PEPSt	signature:(std::istream &s)
Double_Layer_PEPSt::read	peps/double_layer_peps.h	/^        void read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::istream &s)
Double_Layer_PEPSt::single_layer_peps_	peps/double_layer_peps.h	/^        PEPSt<TensorT> single_layer_peps_;$/;"	m	class:Double_Layer_PEPSt	access:protected
Double_Layer_PEPSt::single_layer_tensors_	peps/double_layer_peps.h	/^        std::vector<TensorT> single_layer_tensors_;$/;"	m	class:Double_Layer_PEPSt	access:protected
Double_Layer_PEPSt::virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(const std::array<int,2> &sites_no) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(const std::array<int,2> &sites_no) const
Double_Layer_PEPSt::virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(int sitei, const IndexT &double_virt_ind) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei, const IndexT &double_virt_ind) const
Double_Layer_PEPSt::virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(int sitei, int j) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei, int j) const
Double_Layer_PEPSt::virt_leg_combiners	peps/double_layer_peps.h	/^        const std::vector<CombinerT> &virt_leg_combiners(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
Double_Layer_PEPSt::virt_leg_combiners	peps/double_layer_peps.h	/^        const std::vector<std::vector<CombinerT>> &virt_leg_combiners() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
Double_Layer_PEPSt::virt_leg_combiners_	peps/double_layer_peps.h	/^        std::vector<std::vector<CombinerT>> virt_leg_combiners_;$/;"	m	class:Double_Layer_PEPSt	access:protected
Double_Layer_PEPSt::write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
Double_Layer_PEPSt::write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
Double_Layer_PEPSt::write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:Double_Layer_PEPSt	signature:(std::ostream &s) const
Double_Layer_PEPSt::write	peps/double_layer_peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::ostream &s) const
Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
EPSILON	peps_utilities/predef.h	/^static const double EPSILON=1E-15;$/;"	v
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/boundary_theory/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/execute/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/lattice/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/peps/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/peps_ansatz/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/peps_utilities/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/simple_update/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/test/Makefile	/^EQUALS = =$/;"	m
Evolution_Params	simple_update/trotter_gate.h	/^struct Evolution_Params$/;"	s
Evolution_Params::iter_nums	simple_update/trotter_gate.h	/^        int iter_nums;$/;"	m	struct:Evolution_Params	access:public
Evolution_Params::steps_nums	simple_update/trotter_gate.h	/^        std::vector<int> steps_nums;$/;"	m	struct:Evolution_Params	access:public
Evolution_Params::ts	simple_update/trotter_gate.h	/^        std::vector<double> ts;$/;"	m	struct:Evolution_Params	access:public
HEX	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
HEX	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
Honeycomb_Lattice_Torus	lattice/lattice.cc	/^Honeycomb_Lattice_Torus::Honeycomb_Lattice_Torus(const std::array<int,2> &n_uc): Lattice_Base(2,3,n_uc)$/;"	f	class:Honeycomb_Lattice_Torus	signature:(const std::array<int,2> &n_uc)
Honeycomb_Lattice_Torus	lattice/lattice.h	/^        Honeycomb_Lattice_Torus(const std::array<int,2> &n_uc);$/;"	p	class:Honeycomb_Lattice_Torus	access:public	signature:(const std::array<int,2> &n_uc)
Honeycomb_Lattice_Torus	lattice/lattice.h	/^class Honeycomb_Lattice_Torus : public Lattice_Base$/;"	c	inherits:Lattice_Base
Honeycomb_Lattice_Torus::Honeycomb_Lattice_Torus	lattice/lattice.cc	/^Honeycomb_Lattice_Torus::Honeycomb_Lattice_Torus(const std::array<int,2> &n_uc): Lattice_Base(2,3,n_uc)$/;"	f	class:Honeycomb_Lattice_Torus	signature:(const std::array<int,2> &n_uc)
Honeycomb_Lattice_Torus::Honeycomb_Lattice_Torus	lattice/lattice.h	/^        Honeycomb_Lattice_Torus(const std::array<int,2> &n_uc);$/;"	p	class:Honeycomb_Lattice_Torus	access:public	signature:(const std::array<int,2> &n_uc)
Honeycomb_Lattice_Torus::NeighA	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
Honeycomb_Lattice_Torus::NeighB	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
Honeycomb_Lattice_Torus::NeighC	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
Honeycomb_Lattice_Torus::Neighbour	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	g	class:Honeycomb_Lattice_Torus	access:public
ID_VOID_MAIN	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.cc	/^IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf(const int &D, const Lattice_Base &lattice): $/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &D, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.cc	/^IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice): $/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf() {}$/;"	f	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:()
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf(const int &D, const Lattice_Base &lattice);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &D, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^class IQPEPS_IndexSet_SpinHalf : public PEPSt_IndexSet_Base<IQIndex>$/;"	c	inherits:PEPSt_IndexSet_Base
IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.cc	/^IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf(const int &D, const Lattice_Base &lattice): $/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &D, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.cc	/^IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice): $/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf() {}$/;"	f	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:()
IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf(const int &D, const Lattice_Base &lattice);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &D, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf::IQPEPS_IndexSet_SpinHalf	peps/peps_indexset.h	/^        IQPEPS_IndexSet_SpinHalf(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &D, const std::vector<int> &virt_leg_spin, const Lattice_Base &lattice)
IQPEPS_IndexSet_SpinHalf::init_phys_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_SpinHalf::init_phys_legs()$/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:()
IQPEPS_IndexSet_SpinHalf::init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs();$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:()
IQPEPS_IndexSet_SpinHalf::init_virt_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_SpinHalf::init_virt_legs(const int &spin_dim, const std::vector<int> &virt_indqn_deg)$/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &spin_dim, const std::vector<int> &virt_indqn_deg)
IQPEPS_IndexSet_SpinHalf::init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs(const int &spin_dim, const std::vector<int> &virt_indqn_deg);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &spin_dim, const std::vector<int> &virt_indqn_deg)
IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.cc	/^IQPEPS_IndexSet_Spin_Sym::IQPEPS_IndexSet_Spin_Sym(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order, int virt_legs_qn_order):$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order, int virt_legs_qn_order)
IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.h	/^        IQPEPS_IndexSet_Spin_Sym() {}$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:()
IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.h	/^        IQPEPS_IndexSet_Spin_Sym(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order=-1, int virt_legs_qn_order=-1);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order=-1, int virt_legs_qn_order=-1)
IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.h	/^class IQPEPS_IndexSet_Spin_Sym : public PEPSt_IndexSet_Base<IQIndex>$/;"	c	inherits:PEPSt_IndexSet_Base
IQPEPS_IndexSet_Spin_Sym::IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.cc	/^IQPEPS_IndexSet_Spin_Sym::IQPEPS_IndexSet_Spin_Sym(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order, int virt_legs_qn_order):$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order, int virt_legs_qn_order)
IQPEPS_IndexSet_Spin_Sym::IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.h	/^        IQPEPS_IndexSet_Spin_Sym() {}$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:()
IQPEPS_IndexSet_Spin_Sym::IQPEPS_IndexSet_Spin_Sym	peps/peps_indexset.h	/^        IQPEPS_IndexSet_Spin_Sym(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order=-1, int virt_legs_qn_order=-1);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(int d, int D, const std::vector<int> &phys_leg_spin_deg, const std::vector<int> &virt_leg_spin_deg, const Lattice_Base &lattice, int phys_legs_qn_order=-1, int virt_legs_qn_order=-1)
IQPEPS_IndexSet_Spin_Sym::init_phys_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_Spin_Sym::init_phys_legs(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)
IQPEPS_IndexSet_Spin_Sym::init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)
IQPEPS_IndexSet_Spin_Sym::init_virt_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_Spin_Sym::init_virt_legs(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)
IQPEPS_IndexSet_Spin_Sym::init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)
IndexSpin	peps_utilities/cgtensor.h	/^        IndexSpin() {}$/;"	f	class:IndexSpin	access:public	signature:()
IndexSpin	peps_utilities/cgtensor.h	/^        IndexSpin(const IQIndex &iqind, int spin) : spin_(spin), sz_legs_(iqind) { assert(valid()); }$/;"	f	class:IndexSpin	access:public	signature:(const IQIndex &iqind, int spin)
IndexSpin	peps_utilities/cgtensor.h	/^        explicit IndexSpin(const IQIndex &iqind) : spin_(iqind.nindex()-1), sz_legs_(iqind) { assert(valid()); }$/;"	f	class:IndexSpin	access:public	signature:(const IQIndex &iqind)
IndexSpin	peps_utilities/cgtensor.h	/^        explicit IndexSpin(int spin, Arrow dir=Out): spin_(spin)$/;"	f	class:IndexSpin	access:public	signature:(int spin, Arrow dir=Out)
IndexSpin	peps_utilities/cgtensor.h	/^class IndexSpin $/;"	c
IndexSpin::IndexSpin	peps_utilities/cgtensor.h	/^        IndexSpin() {}$/;"	f	class:IndexSpin	access:public	signature:()
IndexSpin::IndexSpin	peps_utilities/cgtensor.h	/^        IndexSpin(const IQIndex &iqind, int spin) : spin_(spin), sz_legs_(iqind) { assert(valid()); }$/;"	f	class:IndexSpin	access:public	signature:(const IQIndex &iqind, int spin)
IndexSpin::IndexSpin	peps_utilities/cgtensor.h	/^        explicit IndexSpin(const IQIndex &iqind) : spin_(iqind.nindex()-1), sz_legs_(iqind) { assert(valid()); }$/;"	f	class:IndexSpin	access:public	signature:(const IQIndex &iqind)
IndexSpin::IndexSpin	peps_utilities/cgtensor.h	/^        explicit IndexSpin(int spin, Arrow dir=Out): spin_(spin)$/;"	f	class:IndexSpin	access:public	signature:(int spin, Arrow dir=Out)
IndexSpin::dag	peps_utilities/cgtensor.h	/^        IndexSpin &dag() { sz_legs_.dag(); return *this; }$/;"	f	class:IndexSpin	access:public	signature:()
IndexSpin::dir	peps_utilities/cgtensor.h	/^        Arrow dir() const { return sz_legs_.dir(); }$/;"	f	class:IndexSpin	access:public	signature:() const
IndexSpin::indval	peps_utilities/cgtensor.h	/^        IQIndexVal indval (int sz) const$/;"	f	class:IndexSpin	access:public	signature:(int sz) const
IndexSpin::leg	peps_utilities/cgtensor.h	/^        const IQIndex &leg() const { return sz_legs_; }$/;"	f	class:IndexSpin	access:public	signature:() const
IndexSpin::m	peps_utilities/cgtensor.h	/^        int m() const { return sz_legs_.m(); }$/;"	f	class:IndexSpin	access:public	signature:() const
IndexSpin::operator ()	peps_utilities/cgtensor.h	/^        IQIndexVal operator()(int n) const$/;"	f	class:IndexSpin	access:public	signature:(int n) const
IndexSpin::spin_	peps_utilities/cgtensor.h	/^        int spin_;$/;"	m	class:IndexSpin	access:private
IndexSpin::spin_qn	peps_utilities/cgtensor.h	/^        int spin_qn() const { return spin_; }$/;"	f	class:IndexSpin	access:public	signature:() const
IndexSpin::sz_legs_	peps_utilities/cgtensor.h	/^        IQIndex sz_legs_;$/;"	m	class:IndexSpin	access:private
IndexSpin::valid	peps_utilities/cgtensor.h	/^        bool valid()$/;"	f	class:IndexSpin	access:public	signature:()
J	simple_update/trotter_gate.h	/^        double J() const { return J_; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:() const
J_	simple_update/trotter_gate.h	/^        double J_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
K	peps_utilities/cgtensor.h	/^        const std::vector<IQTensor> &K() const { return K_; }$/;"	f	class:CGTensors	access:public	signature:() const
K_	peps_utilities/cgtensor.h	/^        std::vector<IQTensor> K_;$/;"	m	class:CGTensors	access:private
Lattice_Base	lattice/lattice.cc	/^Lattice_Base::Lattice_Base(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs):$/;"	f	class:Lattice_Base	signature:(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs)
Lattice_Base	lattice/lattice.h	/^        Lattice_Base() {}$/;"	f	class:Lattice_Base	access:public	signature:()
Lattice_Base	lattice/lattice.h	/^        Lattice_Base(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs=0);$/;"	p	class:Lattice_Base	access:public	signature:(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs=0)
Lattice_Base	lattice/lattice.h	/^class Lattice_Base$/;"	c
Lattice_Base::Lattice_Base	lattice/lattice.cc	/^Lattice_Base::Lattice_Base(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs):$/;"	f	class:Lattice_Base	signature:(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs)
Lattice_Base::Lattice_Base	lattice/lattice.h	/^        Lattice_Base() {}$/;"	f	class:Lattice_Base	access:public	signature:()
Lattice_Base::Lattice_Base	lattice/lattice.h	/^        Lattice_Base(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs=0);$/;"	p	class:Lattice_Base	access:public	signature:(const int &n_sites_uc, const int &n_bonds_uc, const std::array<int,2> &n_uc, const int &n_boundary_legs=0)
Lattice_Base::bond_coord_to_list	lattice/lattice.h	/^        const int &bond_coord_to_list(int x, int y, int subbond) const$/;"	f	class:Lattice_Base	access:public	signature:(int x, int y, int subbond) const
Lattice_Base::bond_coord_to_list	lattice/lattice.h	/^        inline const int &bond_coord_to_list(Coordinate bond_coord) const$/;"	f	class:Lattice_Base	access:public	signature:(Coordinate bond_coord) const
Lattice_Base::bond_coord_to_list_	lattice/lattice.h	/^        std::vector<std::vector<std::vector<int>>> site_coord_to_list_, bond_coord_to_list_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::bond_end_sites	lattice/lattice.h	/^        inline const int &bond_end_sites(const int &bond_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &bond_i, const int &j) const
Lattice_Base::bond_end_sites	lattice/lattice.h	/^        inline const std::array<int,2> &bond_end_sites(const int &bond_i) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &bond_i) const
Lattice_Base::bond_end_sites_	lattice/lattice.h	/^        std::vector<std::array<int,2>> bond_end_sites_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::bond_list_to_coord	lattice/lattice.h	/^        Coordinate bond_list_to_coord(int bond_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int bond_i) const
Lattice_Base::bond_list_to_coord_	lattice/lattice.h	/^        std::vector<Coordinate> site_list_to_coord_, bond_list_to_coord_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::boundary_end_site	lattice/lattice.h	/^        int boundary_end_site(int boundary_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int boundary_i) const
Lattice_Base::boundary_end_site_	lattice/lattice.h	/^        std::vector<int> boundary_end_site_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::comm_bond	lattice/lattice.h	/^        int comm_bond(int site_A, int site_B) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_A, int site_B) const
Lattice_Base::n_bonds_to_one_site	lattice/lattice.h	/^        inline const int &n_bonds_to_one_site() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_bonds_to_one_site_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_bonds_total	lattice/lattice.h	/^        inline const int &n_bonds_total() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_bonds_total_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_bonds_uc	lattice/lattice.h	/^        inline const int &n_bonds_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_bonds_uc_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_boundary_legs	lattice/lattice.h	/^        int n_boundary_legs() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_boundary_legs_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_sites_total	lattice/lattice.h	/^        inline const int &n_sites_total() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_sites_total_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_sites_uc	lattice/lattice.h	/^        inline const int &n_sites_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_sites_uc_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::n_uc	lattice/lattice.h	/^        inline const std::array<int,2> &n_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::n_uc_	lattice/lattice.h	/^        std::array<int,2> n_uc_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::name	lattice/lattice.h	/^        const std::string &name() const { return name_; }$/;"	f	class:Lattice_Base	access:public	signature:() const
Lattice_Base::name_	lattice/lattice.h	/^        std::string name_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::print_lattice_inf	lattice/lattice.cc	/^void Lattice_Base::print_lattice_inf()$/;"	f	class:Lattice_Base	signature:()
Lattice_Base::print_lattice_inf	lattice/lattice.h	/^        void print_lattice_inf();$/;"	p	class:Lattice_Base	access:public	signature:()
Lattice_Base::site_coord_to_list	lattice/lattice.h	/^        const int &site_coord_to_list(int x, int y, int subsite) const$/;"	f	class:Lattice_Base	access:public	signature:(int x, int y, int subsite) const
Lattice_Base::site_coord_to_list	lattice/lattice.h	/^        inline const int &site_coord_to_list(Coordinate site_coord) const$/;"	f	class:Lattice_Base	access:public	signature:(Coordinate site_coord) const
Lattice_Base::site_coord_to_list_	lattice/lattice.h	/^        std::vector<std::vector<std::vector<int>>> site_coord_to_list_, bond_coord_to_list_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::site_list_to_coord	lattice/lattice.h	/^        Coordinate site_list_to_coord(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
Lattice_Base::site_list_to_coord_	lattice/lattice.h	/^        std::vector<Coordinate> site_list_to_coord_, bond_list_to_coord_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::site_neighbour_bonds	lattice/lattice.h	/^        inline const int &site_neighbour_bonds(const int &site_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i, const int &j) const
Lattice_Base::site_neighbour_bonds	lattice/lattice.h	/^        inline const std::vector<int> &site_neighbour_bonds(const int &site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i) const
Lattice_Base::site_neighbour_bonds_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_sites_, site_neighbour_bonds_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::site_neighbour_boundary	lattice/lattice.h	/^        const std::vector<int> &site_neighbour_boundary(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
Lattice_Base::site_neighbour_boundary	lattice/lattice.h	/^        int site_neighbour_boundary(int site_i, int j) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i, int j) const
Lattice_Base::site_neighbour_boundary_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_boundary_;$/;"	m	class:Lattice_Base	access:protected
Lattice_Base::site_neighbour_sites	lattice/lattice.h	/^        const int &site_neighbour_sites(const int &site_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i, const int &j) const
Lattice_Base::site_neighbour_sites	lattice/lattice.h	/^        const std::vector<int> &site_neighbour_sites(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
Lattice_Base::site_neighbour_sites_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_sites_, site_neighbour_bonds_;$/;"	m	class:Lattice_Base	access:protected
Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
NN_Heisenberg_Hamiltonian	simple_update/trotter_gate.h	/^        NN_Heisenberg_Hamiltonian(std::array<IQIndex,2> nn_sites, double J=1.) : J_(J)$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:(std::array<IQIndex,2> nn_sites, double J=1.)
NN_Heisenberg_Hamiltonian	simple_update/trotter_gate.h	/^class NN_Heisenberg_Hamiltonian$/;"	c
NN_Heisenberg_Hamiltonian::J	simple_update/trotter_gate.h	/^        double J() const { return J_; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:() const
NN_Heisenberg_Hamiltonian::J_	simple_update/trotter_gate.h	/^        double J_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
NN_Heisenberg_Hamiltonian::NN_Heisenberg_Hamiltonian	simple_update/trotter_gate.h	/^        NN_Heisenberg_Hamiltonian(std::array<IQIndex,2> nn_sites, double J=1.) : J_(J)$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:(std::array<IQIndex,2> nn_sites, double J=1.)
NN_Heisenberg_Hamiltonian::bond_tensor	simple_update/trotter_gate.h	/^        const IQTensor &bond_tensor() const { return bond_tensor_; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:() const
NN_Heisenberg_Hamiltonian::bond_tensor_	simple_update/trotter_gate.h	/^        IQTensor bond_tensor_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
NN_Heisenberg_Hamiltonian::init_bond_tensor	simple_update/trotter_gate.h	/^        void init_bond_tensor()$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:()
NN_Heisenberg_Hamiltonian::init_site_tensors	simple_update/trotter_gate.h	/^        void init_site_tensors()$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:()
NN_Heisenberg_Hamiltonian::phys_legs_	simple_update/trotter_gate.h	/^        std::array<std::array<IQIndex,2>,2> phys_legs_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
NN_Heisenberg_Hamiltonian::site_tensors	simple_update/trotter_gate.h	/^        const IQTensor &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:(int i) const
NN_Heisenberg_Hamiltonian::site_tensors_	simple_update/trotter_gate.h	/^        std::array<IQTensor,2> site_tensors_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
NN_Heisenberg_Hamiltonian::virt_legs_	simple_update/trotter_gate.h	/^        std::array<IQIndex,2> virt_legs_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^        NN_Heisenberg_Trotter_Gate() {}$/;"	f	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^        NN_Heisenberg_Trotter_Gate(std::array<IQIndex,2> nn_sites, double t=1.);$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:(std::array<IQIndex,2> nn_sites, double t=1.)
NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^NN_Heisenberg_Trotter_Gate::NN_Heisenberg_Trotter_Gate(std::array<IQIndex,2> nn_sites, double t): $/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:(std::array<IQIndex,2> nn_sites, double t)
NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^class NN_Heisenberg_Trotter_Gate : public Trotter_Gate$/;"	c	inherits:Trotter_Gate
NN_Heisenberg_Trotter_Gate::NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^        NN_Heisenberg_Trotter_Gate() {}$/;"	f	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
NN_Heisenberg_Trotter_Gate::NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^        NN_Heisenberg_Trotter_Gate(std::array<IQIndex,2> nn_sites, double t=1.);$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:(std::array<IQIndex,2> nn_sites, double t=1.)
NN_Heisenberg_Trotter_Gate::NN_Heisenberg_Trotter_Gate	simple_update/trotter_gate.h	/^NN_Heisenberg_Trotter_Gate::NN_Heisenberg_Trotter_Gate(std::array<IQIndex,2> nn_sites, double t): $/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:(std::array<IQIndex,2> nn_sites, double t)
NN_Heisenberg_Trotter_Gate::change_time	simple_update/trotter_gate.h	/^        virtual void change_time(double t)$/;"	f	class:NN_Heisenberg_Trotter_Gate	access:public	signature:(double t)
NN_Heisenberg_Trotter_Gate::init_bond_tensor	simple_update/trotter_gate.h	/^        void init_bond_tensor();$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
NN_Heisenberg_Trotter_Gate::init_bond_tensor	simple_update/trotter_gate.h	/^void NN_Heisenberg_Trotter_Gate::init_bond_tensor()$/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:()
NN_Heisenberg_Trotter_Gate::init_site_tensors	simple_update/trotter_gate.h	/^        void init_site_tensors();$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
NN_Heisenberg_Trotter_Gate::init_site_tensors	simple_update/trotter_gate.h	/^void NN_Heisenberg_Trotter_Gate::init_site_tensors()$/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:()
NeighA	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
NeighB	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
NeighC	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	e	enum:Honeycomb_Lattice_Torus::Neighbour
Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Cylinder	access:public
Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Open	access:public
Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Torus	access:public
Neighbour	lattice/lattice.h	/^        enum Neighbour {NeighA=0, NeighB=1, NeighC=2};$/;"	g	class:Honeycomb_Lattice_Torus	access:public
PEPS_IndexSet	peps/peps_indexset.cc	/^PEPS_IndexSet::PEPS_IndexSet(const int &d, const int &D, const Lattice_Base &lattice): PEPSt_IndexSet_Base<Index>(d,D,lattice.n_sites_total(),lattice.n_bonds_to_one_site(),lattice.n_boundary_legs())$/;"	f	class:PEPS_IndexSet	signature:(const int &d, const int &D, const Lattice_Base &lattice)
PEPS_IndexSet	peps/peps_indexset.h	/^        PEPS_IndexSet() {}$/;"	f	class:PEPS_IndexSet	access:public	signature:()
PEPS_IndexSet	peps/peps_indexset.h	/^        PEPS_IndexSet(const int &d, const int &D, const Lattice_Base &lattice);$/;"	p	class:PEPS_IndexSet	access:public	signature:(const int &d, const int &D, const Lattice_Base &lattice)
PEPS_IndexSet	peps/peps_indexset.h	/^class PEPS_IndexSet : public PEPSt_IndexSet_Base<Index>$/;"	c	inherits:PEPSt_IndexSet_Base
PEPS_IndexSet::PEPS_IndexSet	peps/peps_indexset.cc	/^PEPS_IndexSet::PEPS_IndexSet(const int &d, const int &D, const Lattice_Base &lattice): PEPSt_IndexSet_Base<Index>(d,D,lattice.n_sites_total(),lattice.n_bonds_to_one_site(),lattice.n_boundary_legs())$/;"	f	class:PEPS_IndexSet	signature:(const int &d, const int &D, const Lattice_Base &lattice)
PEPS_IndexSet::PEPS_IndexSet	peps/peps_indexset.h	/^        PEPS_IndexSet() {}$/;"	f	class:PEPS_IndexSet	access:public	signature:()
PEPS_IndexSet::PEPS_IndexSet	peps/peps_indexset.h	/^        PEPS_IndexSet(const int &d, const int &D, const Lattice_Base &lattice);$/;"	p	class:PEPS_IndexSet	access:public	signature:(const int &d, const int &D, const Lattice_Base &lattice)
PEPS_IndexSet::init_phys_legs	peps/peps_indexset.cc	/^void PEPS_IndexSet::init_phys_legs()$/;"	f	class:PEPS_IndexSet	signature:()
PEPS_IndexSet::init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs();$/;"	p	class:PEPS_IndexSet	access:public	signature:()
PEPS_IndexSet::init_virt_legs	peps/peps_indexset.cc	/^void PEPS_IndexSet::init_virt_legs()$/;"	f	class:PEPS_IndexSet	signature:()
PEPS_IndexSet::init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs();$/;"	p	class:PEPS_IndexSet	access:public	signature:()
PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice)
PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set)
PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set, std::vector<IQTensor> site_tensors_uc, std::vector<IQTensor> bond_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set, std::vector<IQTensor> site_tensors_uc, std::vector<IQTensor> bond_tensors_uc)
PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice)
PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set)
PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set, std::vector<ITensor> site_tensors_uc, std::vector<ITensor> bond_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set, std::vector<ITensor> site_tensors_uc, std::vector<ITensor> bond_tensors_uc)
PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice)
PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set)
PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc)
PEPSt	peps/peps.h	/^        PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set);$/;"	p	class:PEPSt	access:public	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set)
PEPSt	peps/peps.h	/^        PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc)
PEPSt	peps/peps.h	/^class PEPSt$/;"	c
PEPSt::D	peps/peps.h	/^        int D() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::D_	peps/peps.h	/^        int d_, D_;$/;"	m	class:PEPSt	access:private
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<IQTensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set, std::vector<IQTensor> site_tensors_uc, std::vector<IQTensor> bond_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IQTensor::IndexT> &index_set, std::vector<IQTensor> site_tensors_uc, std::vector<IQTensor> bond_tensors_uc)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<ITensor>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set, std::vector<ITensor> site_tensors_uc, std::vector<ITensor> bond_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<ITensor::IndexT> &index_set, std::vector<ITensor> site_tensors_uc, std::vector<ITensor> bond_tensors_uc)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set)
PEPSt::PEPSt	peps/peps.cc	/^PEPSt<TensorT>::PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc):$/;"	f	class:PEPSt	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc)
PEPSt::PEPSt	peps/peps.h	/^        PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set);$/;"	p	class:PEPSt	access:public	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set)
PEPSt::PEPSt	peps/peps.h	/^        PEPSt(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(const Lattice_Base &lattice, PEPSt_IndexSet_Base<IndexT> &index_set, std::vector<TensorT> site_tensors_uc, std::vector<TensorT> bond_tensors_uc)
PEPSt::bond_tensors	peps/peps.h	/^        TensorT &bond_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
PEPSt::bond_tensors	peps/peps.h	/^        inline const TensorT &bond_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
PEPSt::bond_tensors	peps/peps.h	/^        inline const std::vector<TensorT> &bond_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::bond_tensors_	peps/peps.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_; $/;"	m	class:PEPSt	access:private
PEPSt::boundary_tensors	peps/peps.h	/^        TensorT &boundary_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
PEPSt::boundary_tensors	peps/peps.h	/^        const TensorT &boundary_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
PEPSt::boundary_tensors	peps/peps.h	/^        const std::vector<TensorT> &boundary_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::boundary_tensors	peps/peps.h	/^        std::vector<TensorT> &boundary_tensors()$/;"	f	class:PEPSt	access:public	signature:()
PEPSt::boundary_tensors_	peps/peps.h	/^        std::vector<TensorT> boundary_tensors_;$/;"	m	class:PEPSt	access:private
PEPSt::construct_tensor	peps/peps.cc	/^void PEPSt<IQTensor>::construct_tensor(IQTensor &tensor, std::vector<IQTensor::IndexT> &indexset)$/;"	f	class:PEPSt	signature:(IQTensor &tensor, std::vector<IQTensor::IndexT> &indexset)
PEPSt::construct_tensor	peps/peps.cc	/^void PEPSt<ITensor>::construct_tensor(ITensor &tensor, std::vector<ITensor::IndexT> &indexset)$/;"	f	class:PEPSt	signature:(ITensor &tensor, std::vector<ITensor::IndexT> &indexset)
PEPSt::construct_tensor	peps/peps.h	/^        void construct_tensor(TensorT &tensor, std::vector<IndexT> &indexset);$/;"	p	class:PEPSt	access:public	signature:(TensorT &tensor, std::vector<IndexT> &indexset)
PEPSt::d	peps/peps.h	/^        int d() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::d_	peps/peps.h	/^        int d_, D_;$/;"	m	class:PEPSt	access:private
PEPSt::generate_bond_tensors	peps/peps.cc	/^void PEPSt<TensorT>::generate_bond_tensors(std::vector<TensorT> bond_tensors_uc)$/;"	f	class:PEPSt	signature:(std::vector<TensorT> bond_tensors_uc)
PEPSt::generate_bond_tensors	peps/peps.h	/^        void generate_bond_tensors(std::vector<TensorT> bond_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(std::vector<TensorT> bond_tensors_uc)
PEPSt::generate_site_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::generate_site_tensors(std::vector<IQTensor> site_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(std::vector<IQTensor> site_tensors_uc)
PEPSt::generate_site_tensors	peps/peps.cc	/^void PEPSt<ITensor>::generate_site_tensors(std::vector<ITensor> site_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(std::vector<ITensor> site_tensors_uc)
PEPSt::generate_site_tensors	peps/peps.cc	/^void PEPSt<TensorT>::generate_site_tensors(std::vector<TensorT> site_tensors_uc)$/;"	f	class:PEPSt	signature:(std::vector<TensorT> site_tensors_uc)
PEPSt::generate_site_tensors	peps/peps.h	/^        void generate_site_tensors(std::vector<TensorT> site_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(std::vector<TensorT> site_tensors_uc)
PEPSt::indexset_ptr_	peps/peps.h	/^        std::shared_ptr<PEPSt_IndexSet_Base<IndexT>> indexset_ptr_;$/;"	m	class:PEPSt	access:private
PEPSt::lattice	peps/peps.h	/^        inline const Lattice_Base &lattice() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::lattice_	peps/peps.h	/^        const Lattice_Base &lattice_;$/;"	m	class:PEPSt	access:private
PEPSt::n_bonds_to_one_site	peps/peps.h	/^        inline const int &n_bonds_to_one_site() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_bonds_total	peps/peps.h	/^        inline const int &n_bonds_total() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_bonds_uc	peps/peps.h	/^        inline const int &n_bonds_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_boundary_legs	peps/peps.h	/^        int n_boundary_legs() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_sites_total	peps/peps.h	/^        inline const int &n_sites_total() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_sites_uc	peps/peps.h	/^        inline const int &n_sites_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::n_uc	peps/peps.h	/^        const std::array<int,2> &n_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::name	peps/peps.h	/^        const std::string &name() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::name_	peps/peps.h	/^        std::string name_;$/;"	m	class:PEPSt	access:private
PEPSt::new_bond_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_bond_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_bond_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_bond_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_bond_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_bond_tensors()$/;"	f	class:PEPSt	signature:()
PEPSt::new_bond_tensors	peps/peps.h	/^        void new_bond_tensors();$/;"	p	class:PEPSt	access:public	signature:()
PEPSt::new_boundary_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_boundary_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_boundary_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_boundary_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_boundary_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_boundary_tensors()$/;"	f	class:PEPSt	signature:()
PEPSt::new_boundary_tensors	peps/peps.h	/^        void new_boundary_tensors();$/;"	p	class:PEPSt	access:public	signature:()
PEPSt::new_site_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_site_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_site_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_site_tensors();$/;"	p	class:PEPSt	file:	signature:()
PEPSt::new_site_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_site_tensors()$/;"	f	class:PEPSt	signature:()
PEPSt::new_site_tensors	peps/peps.h	/^        void new_site_tensors();$/;"	p	class:PEPSt	access:public	signature:()
PEPSt::phys_legs	peps/peps.h	/^        inline const IndexT &phys_legs(const int &site_i) const$/;"	f	class:PEPSt	access:public	signature:(const int &site_i) const
PEPSt::read	peps/peps.cc	/^void PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:PEPSt	file:	signature:(std::istream &s)
PEPSt::read	peps/peps.cc	/^void PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:PEPSt	file:	signature:(std::istream &s)
PEPSt::read	peps/peps.cc	/^void PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:PEPSt	signature:(std::istream &s)
PEPSt::read	peps/peps.h	/^        void read(std::istream &s);$/;"	p	class:PEPSt	access:public	signature:(std::istream &s)
PEPSt::site_tensors	peps/peps.h	/^        TensorT &site_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
PEPSt::site_tensors	peps/peps.h	/^        inline const TensorT &site_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
PEPSt::site_tensors	peps/peps.h	/^        inline const std::vector<TensorT> &site_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
PEPSt::site_tensors_	peps/peps.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_; $/;"	m	class:PEPSt	access:private
PEPSt::virt_legs	peps/peps.h	/^        inline const IndexT &virt_legs(const int &leg_i) const$/;"	f	class:PEPSt	access:public	signature:(const int &leg_i) const
PEPSt::write	peps/peps.cc	/^void PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:PEPSt	file:	signature:(std::ostream &s) const
PEPSt::write	peps/peps.cc	/^void PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:PEPSt	file:	signature:(std::ostream &s) const
PEPSt::write	peps/peps.cc	/^void PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:PEPSt	signature:(std::ostream &s) const
PEPSt::write	peps/peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:PEPSt	access:public	signature:(std::ostream &s) const
PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<IQIndex>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<Index>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<IndexT>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs): $/;"	f	class:PEPSt_IndexSet_Base	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base	peps/peps_indexset.h	/^        PEPSt_IndexSet_Base() {}$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:()
PEPSt_IndexSet_Base	peps/peps_indexset.h	/^        PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base	peps/peps_indexset.h	/^class PEPSt_IndexSet_Base$/;"	c
PEPSt_IndexSet_Base::D	peps/peps_indexset.h	/^        inline const int &D() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
PEPSt_IndexSet_Base::D_	peps/peps_indexset.h	/^        int d_, D_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
PEPSt_IndexSet_Base::PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<IQIndex>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base::PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<Index>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base::PEPSt_IndexSet_Base	peps/peps_indexset.cc	/^PEPSt_IndexSet_Base<IndexT>::PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs): $/;"	f	class:PEPSt_IndexSet_Base	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base::PEPSt_IndexSet_Base	peps/peps_indexset.h	/^        PEPSt_IndexSet_Base() {}$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:()
PEPSt_IndexSet_Base::PEPSt_IndexSet_Base	peps/peps_indexset.h	/^        PEPSt_IndexSet_Base(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs);$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(const int &d, const int &D, const int &n_sites_total, const int &n_bonds_to_one_site, const int &n_boundary_legs)
PEPSt_IndexSet_Base::d	peps/peps_indexset.h	/^        inline const int &d() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
PEPSt_IndexSet_Base::d_	peps/peps_indexset.h	/^        int d_, D_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
PEPSt_IndexSet_Base::name	peps/peps_indexset.h	/^        const std::string &name() const { return name_; }$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
PEPSt_IndexSet_Base::name_	peps/peps_indexset.h	/^        std::string name_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
PEPSt_IndexSet_Base::phys_legs	peps/peps_indexset.h	/^        const IndexT &phys_legs(const int &site_i) const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:(const int &site_i) const
PEPSt_IndexSet_Base::phys_legs	peps/peps_indexset.h	/^        const std::vector<IndexT> &phys_legs() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
PEPSt_IndexSet_Base::phys_legs_	peps/peps_indexset.h	/^        std::vector<IndexT> phys_legs_, virt_legs_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
PEPSt_IndexSet_Base::read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IQIndex>::read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::istream &s)
PEPSt_IndexSet_Base::read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<Index>::read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::istream &s)
PEPSt_IndexSet_Base::read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IndexT>::read(std::istream &s)$/;"	f	class:PEPSt_IndexSet_Base	signature:(std::istream &s)
PEPSt_IndexSet_Base::read	peps/peps_indexset.h	/^        void read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(std::istream &s)
PEPSt_IndexSet_Base::virt_legs	peps/peps_indexset.h	/^        const IndexT &virt_legs(const int &leg_i) const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:(const int &leg_i) const
PEPSt_IndexSet_Base::virt_legs	peps/peps_indexset.h	/^        const std::vector<IndexT> &virt_legs() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
PEPSt_IndexSet_Base::virt_legs_	peps/peps_indexset.h	/^        std::vector<IndexT> phys_legs_, virt_legs_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
PEPSt_IndexSet_Base::write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IQIndex>::write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::ostream &s) const
PEPSt_IndexSet_Base::write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<Index>::write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::ostream &s) const
PEPSt_IndexSet_Base::write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IndexT>::write(std::ostream &s) const$/;"	f	class:PEPSt_IndexSet_Base	signature:(std::ostream &s) const
PEPSt_IndexSet_Base::write	peps/peps_indexset.h	/^        void write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(std::ostream &s) const
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	250;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
RM	build/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/boundary_theory/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/execute/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/lattice/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/peps/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/peps_ansatz/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/peps_utilities/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/simple_update/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
RM	build/test/Makefile	/^RM = \/usr\/public\/cmake\/2.8.9\/bin\/cmake -E remove -f$/;"	m
Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
S	peps_utilities/utilities.h	/^        int S() const { return basis_label_[0]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/boundary_theory/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/execute/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/lattice/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/peps/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/peps_ansatz/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/peps_utilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/simple_update/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/test/Makefile	/^SHELL = \/bin\/sh$/;"	m
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/boundary_theory/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/execute/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/lattice/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/peps/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/peps_ansatz/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/peps_utilities/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/simple_update/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/test/Makefile	/^SUFFIXES =$/;"	m
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.cc	/^Singlet_Tensor_Basis::Singlet_Tensor_Basis(const IndexSet<IQIndex> &iqinds_set):$/;"	f	class:Singlet_Tensor_Basis	signature:(const IndexSet<IQIndex> &iqinds_set)
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.cc	/^Singlet_Tensor_Basis::Singlet_Tensor_Basis(const std::vector<IQIndex> &iqinds):$/;"	f	class:Singlet_Tensor_Basis	signature:(const std::vector<IQIndex> &iqinds)
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        Singlet_Tensor_Basis() {}$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:()
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        explicit Singlet_Tensor_Basis(const IndexSet<IQIndex> &iqinds_set);$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:(const IndexSet<IQIndex> &iqinds_set)
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        explicit Singlet_Tensor_Basis(const std::vector<IQIndex> &iqinds);$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:(const std::vector<IQIndex> &iqinds)
Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^class Singlet_Tensor_Basis$/;"	c
Singlet_Tensor_Basis::Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.cc	/^Singlet_Tensor_Basis::Singlet_Tensor_Basis(const IndexSet<IQIndex> &iqinds_set):$/;"	f	class:Singlet_Tensor_Basis	signature:(const IndexSet<IQIndex> &iqinds_set)
Singlet_Tensor_Basis::Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.cc	/^Singlet_Tensor_Basis::Singlet_Tensor_Basis(const std::vector<IQIndex> &iqinds):$/;"	f	class:Singlet_Tensor_Basis	signature:(const std::vector<IQIndex> &iqinds)
Singlet_Tensor_Basis::Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        Singlet_Tensor_Basis() {}$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:()
Singlet_Tensor_Basis::Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        explicit Singlet_Tensor_Basis(const IndexSet<IQIndex> &iqinds_set);$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:(const IndexSet<IQIndex> &iqinds_set)
Singlet_Tensor_Basis::Singlet_Tensor_Basis	peps_utilities/singlet_tensor_basis.h	/^        explicit Singlet_Tensor_Basis(const std::vector<IQIndex> &iqinds);$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:(const std::vector<IQIndex> &iqinds)
Singlet_Tensor_Basis::begin	peps_utilities/singlet_tensor_basis.h	/^        const_iterator begin() const { return singlet_tensors_.begin(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
Singlet_Tensor_Basis::deg_configs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &deg_configs(int i) const { return deg_configs_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::deg_configs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> deg_configs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::dim	peps_utilities/singlet_tensor_basis.h	/^        int dim() const { return singlet_tensors_.size(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
Singlet_Tensor_Basis::end	peps_utilities/singlet_tensor_basis.h	/^        const_iterator end() const { return singlet_tensors_.end(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
Singlet_Tensor_Basis::fusion_channel	peps_utilities/singlet_tensor_basis.h	/^        int fusion_channel(int i) const { return fusion_channel_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::fusion_channel_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<int> fusion_channel_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::indices	peps_utilities/singlet_tensor_basis.h	/^        const IndexSet<IQIndex> &indices() const { return is_; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
Singlet_Tensor_Basis::init_singlet_tensors	peps_utilities/singlet_tensor_basis.cc	/^void Singlet_Tensor_Basis::init_singlet_tensors()$/;"	f	class:Singlet_Tensor_Basis	signature:()
Singlet_Tensor_Basis::init_singlet_tensors	peps_utilities/singlet_tensor_basis.h	/^        void init_singlet_tensors();$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:()
Singlet_Tensor_Basis::init_spin_deg_and_basis	peps_utilities/singlet_tensor_basis.cc	/^void Singlet_Tensor_Basis::init_spin_deg_and_basis()$/;"	f	class:Singlet_Tensor_Basis	signature:()
Singlet_Tensor_Basis::init_spin_deg_and_basis	peps_utilities/singlet_tensor_basis.h	/^        void init_spin_deg_and_basis();$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:()
Singlet_Tensor_Basis::iqind_spin_rep	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_spin_rep(const IQIndex &sz_leg, std::vector<int> &spin_deg);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, std::vector<int> &spin_deg)
Singlet_Tensor_Basis::iqind_to_spin_basis	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_to_spin_basis(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis)
Singlet_Tensor_Basis::iqind_to_spin_basis	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_to_spin_basis(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis)
Singlet_Tensor_Basis::is_	peps_utilities/singlet_tensor_basis.h	/^        IndexSet<IQIndex> is_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::is_spin_basis_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<Spin_Basis>> is_spin_basis_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::is_spin_degs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> is_spin_degs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::max_spins_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<int> max_spins_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::operator ()	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &operator()(int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::operator []	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &operator[](int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::singlet_tensors_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<IQTensor> singlet_tensors_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::spin_configs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &spin_configs(int i) const { return spin_configs_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::spin_configs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> spin_configs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::spin_deg_list_to_basis_no	peps_utilities/singlet_tensor_basis.h	/^        int spin_deg_list_to_basis_no(const std::vector<int> &spin_list, const std::vector<int> &deg_list, int fusion_channel=0)$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(const std::vector<int> &spin_list, const std::vector<int> &deg_list, int fusion_channel=0)
Singlet_Tensor_Basis::spin_deg_list_to_num_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<std::vector<int>>> spin_deg_list_to_num_;$/;"	m	class:Singlet_Tensor_Basis	access:private
Singlet_Tensor_Basis::spin_degs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &spin_degs(int legi) const { return is_spin_degs_[legi]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int legi) const
Singlet_Tensor_Basis::tensor	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &tensor(int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
Singlet_Tensor_Basis::tensors	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<IQTensor> &tensors() const { return singlet_tensors_; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
SpinSpin	peps_utilities/TPO.cc	/^IQTPO SpinSpin()$/;"	f	signature:()
SpinSpin	peps_utilities/TPO.cc	/^IQTPO SpinSpin(const std::array<IQIndex,2> &phys_legs)$/;"	f	signature:(const std::array<IQIndex,2> &phys_legs)
SpinSpin	peps_utilities/TPO.h	/^IQTPO SpinSpin(const std::array<IQIndex,2> &phys_legs);$/;"	p	signature:(const std::array<IQIndex,2> &phys_legs)
Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis() {}$/;"	f	class:Spin_Basis	access:public	signature:()
Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis(const std::array<int,3> &basis_label) : basis_label_(basis_label) {}$/;"	f	class:Spin_Basis	access:public	signature:(const std::array<int,3> &basis_label)
Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis(int S, int m, int t=0) : basis_label_{{S,m,t}} {}$/;"	f	class:Spin_Basis	access:public	signature:(int S, int m, int t=0)
Spin_Basis	peps_utilities/utilities.h	/^class Spin_Basis$/;"	c
Spin_Basis::S	peps_utilities/utilities.h	/^        int S() const { return basis_label_[0]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
Spin_Basis::Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis() {}$/;"	f	class:Spin_Basis	access:public	signature:()
Spin_Basis::Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis(const std::array<int,3> &basis_label) : basis_label_(basis_label) {}$/;"	f	class:Spin_Basis	access:public	signature:(const std::array<int,3> &basis_label)
Spin_Basis::Spin_Basis	peps_utilities/utilities.h	/^        Spin_Basis(int S, int m, int t=0) : basis_label_{{S,m,t}} {}$/;"	f	class:Spin_Basis	access:public	signature:(int S, int m, int t=0)
Spin_Basis::basis_label	peps_utilities/utilities.h	/^        const std::array<int,3> &basis_label() const$/;"	f	class:Spin_Basis	access:public	signature:() const
Spin_Basis::basis_label_	peps_utilities/utilities.h	/^        std::array<int,3> basis_label_;$/;"	m	class:Spin_Basis	access:private
Spin_Basis::m	peps_utilities/utilities.h	/^        int m() const { return basis_label_[1]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
Spin_Basis::operator ==	peps_utilities/utilities.h	/^        bool operator==(const Spin_Basis &other)$/;"	f	class:Spin_Basis	access:public	signature:(const Spin_Basis &other)
Spin_Basis::t	peps_utilities/utilities.h	/^        int t() const { return basis_label_[2]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
Spin_leg	peps_utilities/utilities.cc	/^IQIndex Spin_leg(const std::vector<int> &spin_deg, const std::string &iqind_name, Arrow dir, IndexType it, int qn_order)$/;"	f	signature:(const std::vector<int> &spin_deg, const std::string &iqind_name, Arrow dir, IndexType it, int qn_order)
Spin_leg	peps_utilities/utilities.h	/^IQIndex Spin_leg(const std::vector<int> &spin_deg, const std::string &iqind_name, Arrow dir=Out, IndexType it=Link, int qn_order=-1);$/;"	p	signature:(const std::vector<int> &spin_deg, const std::string &iqind_name, Arrow dir=Out, IndexType it=Link, int qn_order=-1)
Square	peps_utilities/peps_class_params.h	/^namespace Square$/;"	n
Square::Theta_c4	peps_utilities/peps_class_params.h	/^    static const Complex Theta_c4=1;$/;"	m	namespace:Square
Square::chi_T	peps_utilities/peps_class_params.h	/^    static const double chi_T=1;$/;"	m	namespace:Square
Square::chi_c4	peps_utilities/peps_class_params.h	/^    static const double chi_c4=1;$/;"	m	namespace:Square
Square::mu_12	peps_utilities/peps_class_params.h	/^    static const double mu_12=1;$/;"	m	namespace:Square
Square::mu_t1T	peps_utilities/peps_class_params.h	/^    static const double mu_t1T=1;$/;"	m	namespace:Square
Square::mu_t2c4	peps_utilities/peps_class_params.h	/^    static const double mu_t2c4=-1;$/;"	m	namespace:Square
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<IQTensor>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<IQTensor>::Square_Double_Layer_PEPSt(const PEPSt<IQTensor> &square_peps, int cutting_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const PEPSt<IQTensor> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<ITensor>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<ITensor>::Square_Double_Layer_PEPSt(const PEPSt<ITensor> &square_peps, int cutting_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const PEPSt<ITensor> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<TensorT>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice):$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<TensorT>::Square_Double_Layer_PEPSt(const PEPSt<TensorT> &square_peps, int cutting_col):$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const PEPSt<TensorT> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.h	/^        Square_Double_Layer_PEPSt(const PEPSt<TensorT> &square_peps, int cutting_col=-1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const PEPSt<TensorT> &square_peps, int cutting_col=-1)
Square_Double_Layer_PEPSt	peps/square_double_layer_peps.h	/^class Square_Double_Layer_PEPSt : public Double_Layer_PEPSt<TensorT>$/;"	c	inherits:Double_Layer_PEPSt
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<IQTensor>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<IQTensor>::Square_Double_Layer_PEPSt(const PEPSt<IQTensor> &square_peps, int cutting_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const PEPSt<IQTensor> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<ITensor>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<ITensor>::Square_Double_Layer_PEPSt(const PEPSt<ITensor> &square_peps, int cutting_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const PEPSt<ITensor> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<TensorT>::Square_Double_Layer_PEPSt(const Lattice_Base &square_lattice):$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const Lattice_Base &square_lattice)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.cc	/^Square_Double_Layer_PEPSt<TensorT>::Square_Double_Layer_PEPSt(const PEPSt<TensorT> &square_peps, int cutting_col):$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const PEPSt<TensorT> &square_peps, int cutting_col)
Square_Double_Layer_PEPSt::Square_Double_Layer_PEPSt	peps/square_double_layer_peps.h	/^        Square_Double_Layer_PEPSt(const PEPSt<TensorT> &square_peps, int cutting_col=-1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const PEPSt<TensorT> &square_peps, int cutting_col=-1)
Square_Double_Layer_PEPSt::col_lr	peps/square_double_layer_peps.h	/^        int col_lr(int i) const { return col_lr_[i]; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(int i) const
Square_Double_Layer_PEPSt::col_lr_	peps/square_double_layer_peps.h	/^        std::array<int,2> col_lr_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::cutting_col_	peps/square_double_layer_peps.h	/^        int cutting_col_; $/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::decombine_sigma_lr()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::decombine_sigma_lr(int lr_no)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int lr_no)
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.h	/^        void decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::decombine_sigma_lr	peps/square_double_layer_peps.h	/^        void decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int lr_no)
Square_Double_Layer_PEPSt::density_mat_spectrum	peps/square_double_layer_peps.h	/^        const std::vector<double> &density_mat_spectrum() const { return density_mat_spectrum_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
Square_Double_Layer_PEPSt::density_mat_spectrum_	peps/square_double_layer_peps.h	/^        std::vector<double> density_mat_spectrum_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(double renyi_n)
Square_Double_Layer_PEPSt::entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(double renyi_n)
Square_Double_Layer_PEPSt::entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::entanglement_entropy_Renyi(double renyi_n)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(double renyi_n)
Square_Double_Layer_PEPSt::entanglement_entropy_Renyi	peps/square_double_layer_peps.h	/^        double entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(double renyi_n)
Square_Double_Layer_PEPSt::entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::entanglement_entropy_vN()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::entanglement_entropy_vN	peps/square_double_layer_peps.h	/^        double entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<IQTensor>::entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<ITensor>::entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<TensorT>::entanglement_spectrum()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::entanglement_spectrum	peps/square_double_layer_peps.h	/^        std::vector<double> entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::from_sigma_lr_to_sigma_b()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.h	/^        void from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::lower_combiners_	peps/square_double_layer_peps.h	/^        std::array<std::vector<CombinerT>,2> lower_combiners_, upper_combiners_; ;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::match_sigma_left_right(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
Square_Double_Layer_PEPSt::match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::match_sigma_left_right(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
Square_Double_Layer_PEPSt::match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::match_sigma_left_right(int lr_no)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int lr_no)
Square_Double_Layer_PEPSt::match_sigma_left_right	peps/square_double_layer_peps.h	/^        void match_sigma_left_right(int lr_no=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int lr_no=1)
Square_Double_Layer_PEPSt::match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::match_sigma_lr_double_peps()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::match_sigma_lr_double_peps	peps/square_double_layer_peps.h	/^        void match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::array<int,2> &new_col_lr)
Square_Double_Layer_PEPSt::move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::array<int,2> &new_col_lr)
Square_Double_Layer_PEPSt::move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::move_sigma_lr(const std::array<int,2> &new_col_lr)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::array<int,2> &new_col_lr)
Square_Double_Layer_PEPSt::move_sigma_lr	peps/square_double_layer_peps.h	/^        void move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::array<int,2> &new_col_lr)
Square_Double_Layer_PEPSt::obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_boundary_theory_iterative()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::obtain_boundary_theory_iterative	peps/square_double_layer_peps.h	/^        void obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<IQTensor> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<int> &acting_sites_list, const std::vector<IQTensor> &direct_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<IQTensor>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<IQTensor>> &tensor_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<ITensor> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<int> &acting_sites_list, const std::vector<ITensor> &direct_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<ITensor>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<ITensor>> &tensor_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.h	/^        double obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)
Square_Double_Layer_PEPSt::obtain_correlators	peps/square_double_layer_peps.h	/^        double obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)
Square_Double_Layer_PEPSt::obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_density_matrix_spectrum()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::obtain_density_matrix_spectrum	peps/square_double_layer_peps.h	/^        void obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int left_end_col, int right_end_col)
Square_Double_Layer_PEPSt::obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int left_end_col, int right_end_col)
Square_Double_Layer_PEPSt::obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int left_end_col, int right_end_col)
Square_Double_Layer_PEPSt::obtain_sigma_lr_iterative	peps/square_double_layer_peps.h	/^        void obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int left_end_col, int right_end_col)
Square_Double_Layer_PEPSt::obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_transfer_matrix(int coli);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli)
Square_Double_Layer_PEPSt::obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_transfer_matrix(int coli);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli)
Square_Double_Layer_PEPSt::obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_transfer_matrix(int coli)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int coli)
Square_Double_Layer_PEPSt::obtain_transfer_matrix	peps/square_double_layer_peps.h	/^        void obtain_transfer_matrix(int coli=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int coli=1)
Square_Double_Layer_PEPSt::print_vector_nonzero_elem	peps/square_double_layer_peps.h	/^        void print_vector_nonzero_elem(TensorT vector, int nonzero_elem_num)$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(TensorT vector, int nonzero_elem_num)
Square_Double_Layer_PEPSt::read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::istream &s)
Square_Double_Layer_PEPSt::read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::istream &s)
Square_Double_Layer_PEPSt::read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(std::istream &s)
Square_Double_Layer_PEPSt::read	peps/square_double_layer_peps.h	/^        void read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(std::istream &s)
Square_Double_Layer_PEPSt::recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::recombine_sigma_lr()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::recombine_sigma_lr	peps/square_double_layer_peps.h	/^        void recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::sandwiched_peps_norm(const std::vector<IQTensor> &sandwiched_tensors, int horizontal_dir);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<IQTensor> &sandwiched_tensors, int horizontal_dir)
Square_Double_Layer_PEPSt::sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::sandwiched_peps_norm(const std::vector<ITensor> &sandwiched_tensors, int horizontal_dir);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<ITensor> &sandwiched_tensors, int horizontal_dir)
Square_Double_Layer_PEPSt::sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::sandwiched_peps_norm(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir)
Square_Double_Layer_PEPSt::sandwiched_peps_norm	peps/square_double_layer_peps.h	/^        double sandwiched_peps_norm(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir=1)
Square_Double_Layer_PEPSt::sigma_b_	peps/square_double_layer_peps.h	/^        ITensor sigma_b_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::sigma_lr	peps/square_double_layer_peps.h	/^        const TensorT &sigma_lr(int i) const { return sigma_lr_[i]; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(int i) const
Square_Double_Layer_PEPSt::sigma_lr	peps/square_double_layer_peps.h	/^        const std::array<TensorT,2> &sigma_lr() const { return sigma_lr_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
Square_Double_Layer_PEPSt::sigma_lr_	peps/square_double_layer_peps.h	/^        std::array<TensorT,2> sigma_lr_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::snake_walking_boundary_col()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::snake_walking_boundary_col	peps/square_double_layer_peps.h	/^        void snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
Square_Double_Layer_PEPSt::snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
Square_Double_Layer_PEPSt::snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
Square_Double_Layer_PEPSt::snake_walking_bulk_col	peps/square_double_layer_peps.h	/^        void snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize=false);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize=false)
Square_Double_Layer_PEPSt::transfer_mat	peps/square_double_layer_peps.h	/^        const TensorT &transfer_mat() const { return transfer_mat_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
Square_Double_Layer_PEPSt::transfer_mat_	peps/square_double_layer_peps.h	/^        TensorT transfer_mat_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<IQTensor>::transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<ITensor>::transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
Square_Double_Layer_PEPSt::transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<TensorT>::transfer_matrix_eigvals()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
Square_Double_Layer_PEPSt::transfer_matrix_eigvals	peps/square_double_layer_peps.h	/^        std::vector<Complex> transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
Square_Double_Layer_PEPSt::upper_combiners_	peps/square_double_layer_peps.h	/^        std::array<std::vector<CombinerT>,2> lower_combiners_, upper_combiners_; ;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
Square_Double_Layer_PEPSt::write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
Square_Double_Layer_PEPSt::write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
Square_Double_Layer_PEPSt::write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:Square_Double_Layer_PEPSt	signature:(std::ostream &s) const
Square_Double_Layer_PEPSt::write	peps/square_double_layer_peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(std::ostream &s) const
Square_Lattice_Cylinder	lattice/lattice.cc	/^Square_Lattice_Cylinder::Square_Lattice_Cylinder(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc,n_uc[1]*2)$/;"	f	class:Square_Lattice_Cylinder	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Cylinder	lattice/lattice.h	/^        Square_Lattice_Cylinder(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Cylinder	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Cylinder	lattice/lattice.h	/^class Square_Lattice_Cylinder : public Lattice_Base$/;"	c	inherits:Lattice_Base
Square_Lattice_Cylinder::Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Square_Lattice_Cylinder::Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Square_Lattice_Cylinder::Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Cylinder	access:public
Square_Lattice_Cylinder::Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Square_Lattice_Cylinder::Square_Lattice_Cylinder	lattice/lattice.cc	/^Square_Lattice_Cylinder::Square_Lattice_Cylinder(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc,n_uc[1]*2)$/;"	f	class:Square_Lattice_Cylinder	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Cylinder::Square_Lattice_Cylinder	lattice/lattice.h	/^        Square_Lattice_Cylinder(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Cylinder	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Cylinder::Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Square_Lattice_Open	lattice/lattice.cc	/^Square_Lattice_Open::Square_Lattice_Open(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc,(n_uc[0]+n_uc[1])*2)$/;"	f	class:Square_Lattice_Open	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Open	lattice/lattice.h	/^        Square_Lattice_Open(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Open	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Open	lattice/lattice.h	/^class Square_Lattice_Open : public Lattice_Base$/;"	c	inherits:Lattice_Base
Square_Lattice_Open::Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Square_Lattice_Open::Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Square_Lattice_Open::Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Open	access:public
Square_Lattice_Open::Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Square_Lattice_Open::Square_Lattice_Open	lattice/lattice.cc	/^Square_Lattice_Open::Square_Lattice_Open(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc,(n_uc[0]+n_uc[1])*2)$/;"	f	class:Square_Lattice_Open	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Open::Square_Lattice_Open	lattice/lattice.h	/^        Square_Lattice_Open(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Open	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Open::Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Square_Lattice_Torus	lattice/lattice.cc	/^Square_Lattice_Torus::Square_Lattice_Torus(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc)$/;"	f	class:Square_Lattice_Torus	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Torus	lattice/lattice.h	/^        Square_Lattice_Torus(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Torus	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Torus	lattice/lattice.h	/^class Square_Lattice_Torus : public Lattice_Base$/;"	c	inherits:Lattice_Base
Square_Lattice_Torus::Down	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
Square_Lattice_Torus::Left	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
Square_Lattice_Torus::Neighbour	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	g	class:Square_Lattice_Torus	access:public
Square_Lattice_Torus::Right	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
Square_Lattice_Torus::Square_Lattice_Torus	lattice/lattice.cc	/^Square_Lattice_Torus::Square_Lattice_Torus(const std::array<int,2> &n_uc): Lattice_Base(1,2,n_uc)$/;"	f	class:Square_Lattice_Torus	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Torus::Square_Lattice_Torus	lattice/lattice.h	/^        Square_Lattice_Torus(const std::array<int,2> &n_uc);$/;"	p	class:Square_Lattice_Torus	access:public	signature:(const std::array<int,2> &n_uc)
Square_Lattice_Torus::Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
Square_Lattice_Torus::print_lattice_inf	lattice/lattice.cc	/^void Square_Lattice_Torus::print_lattice_inf()$/;"	f	class:Square_Lattice_Torus	signature:()
Square_Lattice_Torus::print_lattice_inf	lattice/lattice.h	/^        virtual void print_lattice_inf();$/;"	p	class:Square_Lattice_Torus	access:public	signature:()
TPOt	peps_utilities/TPO.h	/^        TPOt() {}$/;"	f	class:TPOt	access:public	signature:()
TPOt	peps_utilities/TPO.h	/^        TPOt(int n_sites, int n_bonds): site_tensors_(n_sites), bond_tensors_(n_bonds) {}$/;"	f	class:TPOt	access:public	signature:(int n_sites, int n_bonds)
TPOt	peps_utilities/TPO.h	/^class TPOt$/;"	c
TPOt::TPOt	peps_utilities/TPO.h	/^        TPOt() {}$/;"	f	class:TPOt	access:public	signature:()
TPOt::TPOt	peps_utilities/TPO.h	/^        TPOt(int n_sites, int n_bonds): site_tensors_(n_sites), bond_tensors_(n_bonds) {}$/;"	f	class:TPOt	access:public	signature:(int n_sites, int n_bonds)
TPOt::bond_tensors	peps_utilities/TPO.h	/^        TensorT &bond_tensors(int i) { return bond_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i)
TPOt::bond_tensors	peps_utilities/TPO.h	/^        const TensorT &bond_tensors(int i) const { return bond_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i) const
TPOt::bond_tensors	peps_utilities/TPO.h	/^        const std::vector<TensorT> &bond_tensors() const { return bond_tensors_; }$/;"	f	class:TPOt	access:public	signature:() const
TPOt::bond_tensors_	peps_utilities/TPO.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_;$/;"	m	class:TPOt	access:private
TPOt::n_bonds	peps_utilities/TPO.h	/^        int n_bonds() const { return bond_tensors_.size(); }$/;"	f	class:TPOt	access:public	signature:() const
TPOt::n_sites	peps_utilities/TPO.h	/^        int n_sites() const { return site_tensors_.size(); }$/;"	f	class:TPOt	access:public	signature:() const
TPOt::phys_legs	peps_utilities/TPO.h	/^        IndexT phys_legs(int i)$/;"	f	class:TPOt	access:public	signature:(int i)
TPOt::site_tensors	peps_utilities/TPO.h	/^        TensorT &site_tensors(int i) { return site_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i)
TPOt::site_tensors	peps_utilities/TPO.h	/^        const TensorT &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i) const
TPOt::site_tensors	peps_utilities/TPO.h	/^        const std::vector<TensorT> &site_tensors() const { return site_tensors_; }$/;"	f	class:TPOt	access:public	signature:() const
TPOt::site_tensors	peps_utilities/TPO.h	/^        std::vector<TensorT> &site_tensors() { return site_tensors_; }$/;"	f	class:TPOt	access:public	signature:()
TPOt::site_tensors_	peps_utilities/TPO.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_;$/;"	m	class:TPOt	access:private
Theta_c4	peps_utilities/peps_class_params.h	/^    static const Complex Theta_c4=1;$/;"	m	namespace:Square
Tnetwork_Storage	peps_utilities/tnetwork_storage.h	/^template <class Tensor>  class Tnetwork_Storage{$/;"	c
Tnetwork_Storage::_Lx	peps_utilities/tnetwork_storage.h	/^  int _Lx;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_Ly	peps_utilities/tnetwork_storage.h	/^  int _Ly;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_boundary_condition	peps_utilities/tnetwork_storage.h	/^  int _boundary_condition;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_coor_to_siteind	peps_utilities/tnetwork_storage.h	/^  itpp::Mat< itpp::Vec<int> > _coor_to_siteind; $/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_n_subl	peps_utilities/tnetwork_storage.h	/^  int _n_subl;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_tensor_list	peps_utilities/tnetwork_storage.h	/^  itpp::Array<Tensor> _tensor_list;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::_tnetwork_type	peps_utilities/tnetwork_storage.h	/^  int _tnetwork_type;$/;"	m	class:Tnetwork_Storage	access:public
Tnetwork_Storage::read	peps_utilities/tnetwork_storage.h	/^  void read(std::istream& s){$/;"	f	class:Tnetwork_Storage	access:public	signature:(std::istream& s)
Tnetwork_Storage::write	peps_utilities/tnetwork_storage.h	/^  void write(std::ostream& s) const{$/;"	f	class:Tnetwork_Storage	access:public	signature:(std::ostream& s) const
Trotter_Gate	simple_update/trotter_gate.h	/^        Trotter_Gate() {}$/;"	f	class:Trotter_Gate	access:public	signature:()
Trotter_Gate	simple_update/trotter_gate.h	/^        Trotter_Gate(int site_num, int bond_num, double t=1.): $/;"	f	class:Trotter_Gate	access:public	signature:(int site_num, int bond_num, double t=1.)
Trotter_Gate	simple_update/trotter_gate.h	/^class Trotter_Gate$/;"	c
Trotter_Gate::Trotter_Gate	simple_update/trotter_gate.h	/^        Trotter_Gate() {}$/;"	f	class:Trotter_Gate	access:public	signature:()
Trotter_Gate::Trotter_Gate	simple_update/trotter_gate.h	/^        Trotter_Gate(int site_num, int bond_num, double t=1.): $/;"	f	class:Trotter_Gate	access:public	signature:(int site_num, int bond_num, double t=1.)
Trotter_Gate::bond_tensors	simple_update/trotter_gate.h	/^        const IQTensor &bond_tensors(int i=0) const { return bond_tensors_[i]; }$/;"	f	class:Trotter_Gate	access:public	signature:(int i=0) const
Trotter_Gate::bond_tensors	simple_update/trotter_gate.h	/^        const std::vector<IQTensor> &bond_tensors() const { return bond_tensors_; }$/;"	f	class:Trotter_Gate	access:public	signature:() const
Trotter_Gate::bond_tensors_	simple_update/trotter_gate.h	/^        std::vector<IQTensor> bond_tensors_;$/;"	m	class:Trotter_Gate	access:protected
Trotter_Gate::change_time	simple_update/trotter_gate.h	/^        virtual void change_time(double t) = 0;$/;"	p	class:Trotter_Gate	access:public	signature:(double t)
Trotter_Gate::phys_legs_	simple_update/trotter_gate.h	/^        std::vector<std::array<IQIndex,2>> phys_legs_;$/;"	m	class:Trotter_Gate	access:protected
Trotter_Gate::site_tensors	simple_update/trotter_gate.h	/^        const IQTensor &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:Trotter_Gate	access:public	signature:(int i) const
Trotter_Gate::site_tensors	simple_update/trotter_gate.h	/^        const std::vector<IQTensor> &site_tensors() const { return site_tensors_; }$/;"	f	class:Trotter_Gate	access:public	signature:() const
Trotter_Gate::site_tensors_	simple_update/trotter_gate.h	/^        std::vector<IQTensor> site_tensors_;$/;"	m	class:Trotter_Gate	access:protected
Trotter_Gate::t	simple_update/trotter_gate.h	/^        double t() { return t_; }$/;"	f	class:Trotter_Gate	access:public	signature:()
Trotter_Gate::t_	simple_update/trotter_gate.h	/^        double t_;$/;"	m	class:Trotter_Gate	access:protected
Trotter_Gate::virt_legs_	simple_update/trotter_gate.h	/^        std::vector<std::vector<IQIndex>> virt_legs_;$/;"	m	class:Trotter_Gate	access:protected
Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Cylinder::Neighbour
Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Open::Neighbour
Up	lattice/lattice.h	/^        enum Neighbour {Left=0, Up=1, Right=2, Down=3};$/;"	e	enum:Square_Lattice_Torus::Neighbour
VERBOSE	build/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/boundary_theory/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/execute/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/lattice/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/peps/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/peps_ansatz/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/peps_utilities/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/simple_update/Makefile	/^VERBOSE = 1$/;"	m
VERBOSE	build/test/Makefile	/^VERBOSE = 1$/;"	m
_CGTENSOR_H_	peps_utilities/cgtensor.h	5;"	d
_DOUBLE_LAYER_PEPS_	peps/double_layer_peps.h	3;"	d
_FEATURELESS_HONEYCOMB_H_	peps_ansatz/featureless_honeycomb.h	3;"	d
_LATTICE_H_	lattice/lattice.h	3;"	d
_Lx	peps_utilities/tnetwork_storage.h	/^  int _Lx;$/;"	m	class:Tnetwork_Storage	access:public
_Ly	peps_utilities/tnetwork_storage.h	/^  int _Ly;$/;"	m	class:Tnetwork_Storage	access:public
_PEPS_CLASS_PARAMS_H_	peps_utilities/peps_class_params.h	3;"	d
_PEPS_H_	peps/peps.h	3;"	d
_PEPS_INDEXSET_H_	peps/peps_indexset.h	3;"	d
_PREDEF_H_	peps_utilities/predef.h	3;"	d
_SIMPLE_UPDATE_ENV_H_	simple_update/simple_update_env.h	3;"	d
_SIMPLE_UPDATE_H_	simple_update/simple_update.h	3;"	d
_SINGLET_TENSOR_BASIS_	peps_utilities/singlet_tensor_basis.h	3;"	d
_SQUARE_CYLINDER_H_	peps/square_double_layer_peps.h	3;"	d
_TENSOR_PRODUCT_OPERATOR_H_	peps_utilities/TPO.h	3;"	d
_TNETWORK_STORAGE_H	peps_utilities/tnetwork_storage.h	2;"	d
_TRANSFER_TO_SQUARE_	peps_ansatz/transfer_to_square.h	5;"	d
_TROTTER_H_	simple_update/trotter_gate.h	3;"	d
_UTILITIES_H_	peps_utilities/utilities.h	3;"	d
_boundary_condition	peps_utilities/tnetwork_storage.h	/^  int _boundary_condition;$/;"	m	class:Tnetwork_Storage	access:public
_coor_to_siteind	peps_utilities/tnetwork_storage.h	/^  itpp::Mat< itpp::Vec<int> > _coor_to_siteind; $/;"	m	class:Tnetwork_Storage	access:public
_n_subl	peps_utilities/tnetwork_storage.h	/^  int _n_subl;$/;"	m	class:Tnetwork_Storage	access:public
_tensor_list	peps_utilities/tnetwork_storage.h	/^  itpp::Array<Tensor> _tensor_list;$/;"	m	class:Tnetwork_Storage	access:public
_tnetwork_type	peps_utilities/tnetwork_storage.h	/^  int _tnetwork_type;$/;"	m	class:Tnetwork_Storage	access:public
basis_label	peps_utilities/utilities.h	/^        const std::array<int,3> &basis_label() const$/;"	f	class:Spin_Basis	access:public	signature:() const
basis_label_	peps_utilities/utilities.h	/^        std::array<int,3> basis_label_;$/;"	m	class:Spin_Basis	access:private
begin	peps_utilities/singlet_tensor_basis.h	/^        const_iterator begin() const { return singlet_tensors_.begin(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
bond_coord_to_list	lattice/lattice.h	/^        const int &bond_coord_to_list(int x, int y, int subbond) const$/;"	f	class:Lattice_Base	access:public	signature:(int x, int y, int subbond) const
bond_coord_to_list	lattice/lattice.h	/^        inline const int &bond_coord_to_list(Coordinate bond_coord) const$/;"	f	class:Lattice_Base	access:public	signature:(Coordinate bond_coord) const
bond_coord_to_list_	lattice/lattice.h	/^        std::vector<std::vector<std::vector<int>>> site_coord_to_list_, bond_coord_to_list_;$/;"	m	class:Lattice_Base	access:protected
bond_end_sites	lattice/lattice.h	/^        inline const int &bond_end_sites(const int &bond_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &bond_i, const int &j) const
bond_end_sites	lattice/lattice.h	/^        inline const std::array<int,2> &bond_end_sites(const int &bond_i) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &bond_i) const
bond_end_sites_	lattice/lattice.h	/^        std::vector<std::array<int,2>> bond_end_sites_;$/;"	m	class:Lattice_Base	access:protected
bond_list_to_coord	lattice/lattice.h	/^        Coordinate bond_list_to_coord(int bond_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int bond_i) const
bond_list_to_coord_	lattice/lattice.h	/^        std::vector<Coordinate> site_list_to_coord_, bond_list_to_coord_;$/;"	m	class:Lattice_Base	access:protected
bond_tensor	simple_update/trotter_gate.h	/^        const IQTensor &bond_tensor() const { return bond_tensor_; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:() const
bond_tensor_	simple_update/trotter_gate.h	/^        IQTensor bond_tensor_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
bond_tensors	peps/peps.h	/^        TensorT &bond_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
bond_tensors	peps/peps.h	/^        inline const TensorT &bond_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
bond_tensors	peps/peps.h	/^        inline const std::vector<TensorT> &bond_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
bond_tensors	peps_utilities/TPO.h	/^        TensorT &bond_tensors(int i) { return bond_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i)
bond_tensors	peps_utilities/TPO.h	/^        const TensorT &bond_tensors(int i) const { return bond_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i) const
bond_tensors	peps_utilities/TPO.h	/^        const std::vector<TensorT> &bond_tensors() const { return bond_tensors_; }$/;"	f	class:TPOt	access:public	signature:() const
bond_tensors	simple_update/trotter_gate.h	/^        const IQTensor &bond_tensors(int i=0) const { return bond_tensors_[i]; }$/;"	f	class:Trotter_Gate	access:public	signature:(int i=0) const
bond_tensors	simple_update/trotter_gate.h	/^        const std::vector<IQTensor> &bond_tensors() const { return bond_tensors_; }$/;"	f	class:Trotter_Gate	access:public	signature:() const
bond_tensors_	peps/peps.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_; $/;"	m	class:PEPSt	access:private
bond_tensors_	peps_utilities/TPO.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_;$/;"	m	class:TPOt	access:private
bond_tensors_	simple_update/trotter_gate.h	/^        std::vector<IQTensor> bond_tensors_;$/;"	m	class:Trotter_Gate	access:protected
boundary_end_site	lattice/lattice.h	/^        int boundary_end_site(int boundary_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int boundary_i) const
boundary_end_site_	lattice/lattice.h	/^        std::vector<int> boundary_end_site_;$/;"	m	class:Lattice_Base	access:protected
boundary_tensors	peps/peps.h	/^        TensorT &boundary_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
boundary_tensors	peps/peps.h	/^        const TensorT &boundary_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
boundary_tensors	peps/peps.h	/^        const std::vector<TensorT> &boundary_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
boundary_tensors	peps/peps.h	/^        std::vector<TensorT> &boundary_tensors()$/;"	f	class:PEPSt	access:public	signature:()
boundary_tensors_	peps/peps.h	/^        std::vector<TensorT> boundary_tensors_;$/;"	m	class:PEPSt	access:private
change_time	simple_update/trotter_gate.h	/^        virtual void change_time(double t) = 0;$/;"	p	class:Trotter_Gate	access:public	signature:(double t)
change_time	simple_update/trotter_gate.h	/^        virtual void change_time(double t)$/;"	f	class:NN_Heisenberg_Trotter_Gate	access:public	signature:(double t)
chi_T	peps_utilities/peps_class_params.h	/^    static const double chi_T=1;$/;"	m	namespace:Square
chi_c4	peps_utilities/peps_class_params.h	/^    static const double chi_c4=1;$/;"	m	namespace:Square
clean	peps_utilities/utilities.h	/^inline void clean(IQTensor &tensor) {return tensor.clean(); }$/;"	f	signature:(IQTensor &tensor)
clean	peps_utilities/utilities.h	/^inline void clean(ITensor &tensor) {}$/;"	f	signature:(ITensor &tensor)
col_lr	peps/square_double_layer_peps.h	/^        int col_lr(int i) const { return col_lr_[i]; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(int i) const
col_lr_	peps/square_double_layer_peps.h	/^        std::array<int,2> col_lr_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
comm_bond	lattice/lattice.h	/^        int comm_bond(int site_A, int site_B) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_A, int site_B) const
construct_tensor	peps/peps.cc	/^void PEPSt<IQTensor>::construct_tensor(IQTensor &tensor, std::vector<IQTensor::IndexT> &indexset)$/;"	f	class:PEPSt	signature:(IQTensor &tensor, std::vector<IQTensor::IndexT> &indexset)
construct_tensor	peps/peps.cc	/^void PEPSt<ITensor>::construct_tensor(ITensor &tensor, std::vector<ITensor::IndexT> &indexset)$/;"	f	class:PEPSt	signature:(ITensor &tensor, std::vector<ITensor::IndexT> &indexset)
construct_tensor	peps/peps.h	/^        void construct_tensor(TensorT &tensor, std::vector<IndexT> &indexset);$/;"	p	class:PEPSt	access:public	signature:(TensorT &tensor, std::vector<IndexT> &indexset)
cutting_col_	peps/square_double_layer_peps.h	/^        int cutting_col_; $/;"	m	class:Square_Double_Layer_PEPSt	access:private
d	peps/peps.h	/^        int d() const$/;"	f	class:PEPSt	access:public	signature:() const
d	peps/peps_indexset.h	/^        inline const int &d() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
d_	peps/peps.h	/^        int d_, D_;$/;"	m	class:PEPSt	access:private
d_	peps/peps_indexset.h	/^        int d_, D_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
dag	peps_utilities/cgtensor.h	/^        IndexSpin &dag() { sz_legs_.dag(); return *this; }$/;"	f	class:IndexSpin	access:public	signature:()
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename IQTensor::CombinerT Double_Layer_PEPSt<IQTensor>::decombine_double_virt_indice(int sitei, const IQTensor::IndexT &double_virt_ind, IQTensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(int sitei, const IQTensor::IndexT &double_virt_ind, IQTensor::IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename IQTensor::CombinerT Double_Layer_PEPSt<IQTensor>::decombine_double_virt_indice(std::array<int,2> sites_no, IQTensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::array<int,2> sites_no, IQTensor::IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename ITensor::CombinerT Double_Layer_PEPSt<ITensor>::decombine_double_virt_indice(int sitei, const ITensor::IndexT &double_virt_ind, ITensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(int sitei, const ITensor::IndexT &double_virt_ind, ITensor::IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename ITensor::CombinerT Double_Layer_PEPSt<ITensor>::decombine_double_virt_indice(std::array<int,2> sites_no, ITensor::IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::array<int,2> sites_no, ITensor::IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename TensorT::CombinerT Double_Layer_PEPSt<TensorT>::decombine_double_virt_indice(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)$/;"	f	class:Double_Layer_PEPSt	signature:(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.cc	/^typename TensorT::CombinerT Double_Layer_PEPSt<TensorT>::decombine_double_virt_indice(std::array<int,2> sites_no, IndexT &lower_ind)$/;"	f	class:Double_Layer_PEPSt	signature:(std::array<int,2> sites_no, IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.h	/^        CombinerT decombine_double_virt_indice(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(int sitei, const IndexT &double_virt_ind, IndexT &lower_ind)
decombine_double_virt_indice	peps/double_layer_peps.h	/^        CombinerT decombine_double_virt_indice(std::array<int,2> sites_no, IndexT &lower_ind);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::array<int,2> sites_no, IndexT &lower_ind)
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::decombine_sigma_lr()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
decombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::decombine_sigma_lr(int lr_no)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int lr_no)
decombine_sigma_lr	peps/square_double_layer_peps.h	/^        void decombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
decombine_sigma_lr	peps/square_double_layer_peps.h	/^        void decombine_sigma_lr(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int lr_no)
deg_configs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &deg_configs(int i) const { return deg_configs_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
deg_configs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> deg_configs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
density_mat_spectrum	peps/square_double_layer_peps.h	/^        const std::vector<double> &density_mat_spectrum() const { return density_mat_spectrum_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
density_mat_spectrum_	peps/square_double_layer_peps.h	/^        std::vector<double> density_mat_spectrum_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
dim	peps_utilities/singlet_tensor_basis.h	/^        int dim() const { return singlet_tensors_.size(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
dir	peps_utilities/cgtensor.h	/^        Arrow dir() const { return sz_legs_.dir(); }$/;"	f	class:IndexSpin	access:public	signature:() const
double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^IQTensor Double_Layer_PEPSt<IQTensor>::double_layer_tensor_from_lower_upper_tensors(IQTensor lower_tensor, IQTensor upper_tensor, const std::vector<IQTensor::CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(IQTensor lower_tensor, IQTensor upper_tensor, const std::vector<IQTensor::CombinerT> &pair_combiners)
double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^ITensor Double_Layer_PEPSt<ITensor>::double_layer_tensor_from_lower_upper_tensors(ITensor lower_tensor, ITensor upper_tensor, const std::vector<ITensor::CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(ITensor lower_tensor, ITensor upper_tensor, const std::vector<ITensor::CombinerT> &pair_combiners)
double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.cc	/^TensorT Double_Layer_PEPSt<TensorT>::double_layer_tensor_from_lower_upper_tensors(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)$/;"	f	class:Double_Layer_PEPSt	signature:(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)
double_layer_tensor_from_lower_upper_tensors	peps/double_layer_peps.h	/^        TensorT double_layer_tensor_from_lower_upper_tensors(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(TensorT lower_tensor, TensorT upper_tensor, const std::vector<CombinerT> &pair_combiners)
double_layer_tensors	peps/double_layer_peps.h	/^        const TensorT &double_layer_tensors(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
double_layer_tensors	peps/double_layer_peps.h	/^        const std::vector<TensorT> &double_layer_tensors() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
double_layer_tensors_	peps/double_layer_peps.h	/^        std::vector<TensorT> double_layer_tensors_;$/;"	m	class:Double_Layer_PEPSt	access:protected
end	peps_utilities/singlet_tensor_basis.h	/^        const_iterator end() const { return singlet_tensors_.end(); }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(double renyi_n)
entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(double renyi_n)
entanglement_entropy_Renyi	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::entanglement_entropy_Renyi(double renyi_n)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(double renyi_n)
entanglement_entropy_Renyi	peps/square_double_layer_peps.h	/^        double entanglement_entropy_Renyi(double renyi_n);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(double renyi_n)
entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
entanglement_entropy_vN	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::entanglement_entropy_vN()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
entanglement_entropy_vN	peps/square_double_layer_peps.h	/^        double entanglement_entropy_vN();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<IQTensor>::entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<ITensor>::entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
entanglement_spectrum	peps/square_double_layer_peps.cc	/^std::vector<double> Square_Double_Layer_PEPSt<TensorT>::entanglement_spectrum()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
entanglement_spectrum	peps/square_double_layer_peps.h	/^        std::vector<double> entanglement_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
eta_from_mu	peps_utilities/utilities.cc	/^IQTensor eta_from_mu(double mu, IQIndex eta_leg)$/;"	f	signature:(double mu, IQIndex eta_leg)
eta_from_mu	peps_utilities/utilities.cc	/^IQTensor eta_from_mu(double mu, const std::vector<int> &spin_deg)$/;"	f	signature:(double mu, const std::vector<int> &spin_deg)
eta_from_mu	peps_utilities/utilities.cc	/^ITensor eta_from_mu(double mu, Index eta_leg)$/;"	f	signature:(double mu, Index eta_leg)
eta_from_mu	peps_utilities/utilities.h	/^IQTensor eta_from_mu(double mu, IQIndex eta_leg);$/;"	p	signature:(double mu, IQIndex eta_leg)
eta_from_mu	peps_utilities/utilities.h	/^IQTensor eta_from_mu(double mu, const std::vector<int> &spin_deg);$/;"	p	signature:(double mu, const std::vector<int> &spin_deg)
eta_from_mu	peps_utilities/utilities.h	/^ITensor eta_from_mu(double mu, Index eta_leg);$/;"	p	signature:(double mu, Index eta_leg)
from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::from_sigma_lr_to_sigma_b()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
from_sigma_lr_to_sigma_b	peps/square_double_layer_peps.h	/^        void from_sigma_lr_to_sigma_b();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
fusion_channel	peps_utilities/singlet_tensor_basis.h	/^        int fusion_channel(int i) const { return fusion_channel_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
fusion_channel_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<int> fusion_channel_;$/;"	m	class:Singlet_Tensor_Basis	access:private
generate_bond_tensors	peps/peps.cc	/^void PEPSt<TensorT>::generate_bond_tensors(std::vector<TensorT> bond_tensors_uc)$/;"	f	class:PEPSt	signature:(std::vector<TensorT> bond_tensors_uc)
generate_bond_tensors	peps/peps.h	/^        void generate_bond_tensors(std::vector<TensorT> bond_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(std::vector<TensorT> bond_tensors_uc)
generate_featureless_honeycomb_ansatz_uc	peps_ansatz/featureless_honeycomb.h	/^inline void generate_featureless_honeycomb_ansatz_uc(double A1, double A2, std::vector<IQTensor> &honeycomb_site_tensors_uc, std::vector<IQTensor> &honeycomb_bond_tensors_uc)$/;"	f	signature:(double A1, double A2, std::vector<IQTensor> &honeycomb_site_tensors_uc, std::vector<IQTensor> &honeycomb_bond_tensors_uc)
generate_site_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::generate_site_tensors(std::vector<IQTensor> site_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(std::vector<IQTensor> site_tensors_uc)
generate_site_tensors	peps/peps.cc	/^void PEPSt<ITensor>::generate_site_tensors(std::vector<ITensor> site_tensors_uc);$/;"	p	class:PEPSt	file:	signature:(std::vector<ITensor> site_tensors_uc)
generate_site_tensors	peps/peps.cc	/^void PEPSt<TensorT>::generate_site_tensors(std::vector<TensorT> site_tensors_uc)$/;"	f	class:PEPSt	signature:(std::vector<TensorT> site_tensors_uc)
generate_site_tensors	peps/peps.h	/^        void generate_site_tensors(std::vector<TensorT> site_tensors_uc);$/;"	p	class:PEPSt	access:public	signature:(std::vector<TensorT> site_tensors_uc)
get_env_tensor	simple_update/simple_update_env.cc	/^void get_env_tensor(const IQTensor &site_tensA, const IQTensor &site_tensB, std::array<std::vector<IQTensor>,2> &env_tens)$/;"	f	signature:(const IQTensor &site_tensA, const IQTensor &site_tensB, std::array<std::vector<IQTensor>,2> &env_tens)
get_env_tensor	simple_update/simple_update_env.h	/^void get_env_tensor(const IQTensor &site_tensA, const IQTensor &site_tensB, std::array<std::vector<IQTensor>,2> &env_tens);$/;"	p	signature:(const IQTensor &site_tensA, const IQTensor &site_tensB, std::array<std::vector<IQTensor>,2> &env_tens)
indexset_ptr_	peps/peps.h	/^        std::shared_ptr<PEPSt_IndexSet_Base<IndexT>> indexset_ptr_;$/;"	m	class:PEPSt	access:private
indices	peps_utilities/singlet_tensor_basis.h	/^        const IndexSet<IQIndex> &indices() const { return is_; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
indval	peps_utilities/cgtensor.h	/^        IQIndexVal indval (int sz) const$/;"	f	class:IndexSpin	access:public	signature:(int sz) const
info_arch	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	peps_utilities/cgtensor.cc	/^void CGTensors::init()$/;"	f	class:CGTensors	signature:()
init	peps_utilities/cgtensor.h	/^        void init();$/;"	p	class:CGTensors	access:public	signature:()
init_bond_tensor	simple_update/trotter_gate.h	/^        void init_bond_tensor()$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:()
init_bond_tensor	simple_update/trotter_gate.h	/^        void init_bond_tensor();$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
init_bond_tensor	simple_update/trotter_gate.h	/^void NN_Heisenberg_Trotter_Gate::init_bond_tensor()$/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:()
init_phys_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_SpinHalf::init_phys_legs()$/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:()
init_phys_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_Spin_Sym::init_phys_legs(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)
init_phys_legs	peps/peps_indexset.cc	/^void PEPS_IndexSet::init_phys_legs()$/;"	f	class:PEPS_IndexSet	signature:()
init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs();$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:()
init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs();$/;"	p	class:PEPS_IndexSet	access:public	signature:()
init_phys_legs	peps/peps_indexset.h	/^        void init_phys_legs(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(const std::vector<int> &phys_leg_spin_deg, int phys_legs_qn_order)
init_singlet_tensors	peps_utilities/singlet_tensor_basis.cc	/^void Singlet_Tensor_Basis::init_singlet_tensors()$/;"	f	class:Singlet_Tensor_Basis	signature:()
init_singlet_tensors	peps_utilities/singlet_tensor_basis.h	/^        void init_singlet_tensors();$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:()
init_site_tensors	simple_update/trotter_gate.h	/^        void init_site_tensors()$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:()
init_site_tensors	simple_update/trotter_gate.h	/^        void init_site_tensors();$/;"	p	class:NN_Heisenberg_Trotter_Gate	access:public	signature:()
init_site_tensors	simple_update/trotter_gate.h	/^void NN_Heisenberg_Trotter_Gate::init_site_tensors()$/;"	f	class:NN_Heisenberg_Trotter_Gate	signature:()
init_spin_deg_and_basis	peps_utilities/singlet_tensor_basis.cc	/^void Singlet_Tensor_Basis::init_spin_deg_and_basis()$/;"	f	class:Singlet_Tensor_Basis	signature:()
init_spin_deg_and_basis	peps_utilities/singlet_tensor_basis.h	/^        void init_spin_deg_and_basis();$/;"	p	class:Singlet_Tensor_Basis	access:public	signature:()
init_virt_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_SpinHalf::init_virt_legs(const int &spin_dim, const std::vector<int> &virt_indqn_deg)$/;"	f	class:IQPEPS_IndexSet_SpinHalf	signature:(const int &spin_dim, const std::vector<int> &virt_indqn_deg)
init_virt_legs	peps/peps_indexset.cc	/^void IQPEPS_IndexSet_Spin_Sym::init_virt_legs(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)$/;"	f	class:IQPEPS_IndexSet_Spin_Sym	signature:(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)
init_virt_legs	peps/peps_indexset.cc	/^void PEPS_IndexSet::init_virt_legs()$/;"	f	class:PEPS_IndexSet	signature:()
init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs();$/;"	p	class:PEPS_IndexSet	access:public	signature:()
init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs(const int &spin_dim, const std::vector<int> &virt_indqn_deg);$/;"	p	class:IQPEPS_IndexSet_SpinHalf	access:public	signature:(const int &spin_dim, const std::vector<int> &virt_indqn_deg)
init_virt_legs	peps/peps_indexset.h	/^        void init_virt_legs(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order);$/;"	p	class:IQPEPS_IndexSet_Spin_Sym	access:public	signature:(const std::vector<int> &virt_leg_spin_deg, int virt_legs_qn_order)
iqind_spin_rep	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_spin_rep(const IQIndex &sz_leg, std::vector<int> &spin_deg);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, std::vector<int> &spin_deg)
iqind_spin_rep	peps_utilities/utilities.cc	/^bool iqind_spin_rep(const IQIndex &sz_leg, std::vector<int> &spin_deg)$/;"	f	signature:(const IQIndex &sz_leg, std::vector<int> &spin_deg)
iqind_spin_rep	peps_utilities/utilities.h	/^bool iqind_spin_rep(const IQIndex &sz_leg, std::vector<int> &spin_deg);$/;"	p	signature:(const IQIndex &sz_leg, std::vector<int> &spin_deg)
iqind_to_spin_basis	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_to_spin_basis(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis)
iqind_to_spin_basis	peps_utilities/singlet_tensor_basis.h	/^        friend bool iqind_to_spin_basis(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis);$/;"	p	class:Singlet_Tensor_Basis	access:friend	signature:(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis)
iqind_to_spin_basis	peps_utilities/utilities.cc	/^bool iqind_to_spin_basis(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis)$/;"	f	signature:(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis)
iqind_to_spin_basis	peps_utilities/utilities.cc	/^bool iqind_to_spin_basis(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis)$/;"	f	signature:(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis)
iqind_to_spin_basis	peps_utilities/utilities.h	/^bool iqind_to_spin_basis(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis);$/;"	p	signature:(const IQIndex &sz_leg, const std::vector<int> &spin_deg, std::vector<Spin_Basis> &spin_basis)
iqind_to_spin_basis	peps_utilities/utilities.h	/^bool iqind_to_spin_basis(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis);$/;"	p	signature:(const IQIndex &sz_leg, std::vector<Spin_Basis> &spin_basis)
iqindice	peps_utilities/cgtensor.h	/^        const IQIndex &iqindice(int i) const { return spin_legs_[i].leg(); }$/;"	f	class:CGTensors	access:public	signature:(int i) const
is_	peps_utilities/singlet_tensor_basis.h	/^        IndexSet<IQIndex> is_;$/;"	m	class:Singlet_Tensor_Basis	access:private
is_spin_basis_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<Spin_Basis>> is_spin_basis_;$/;"	m	class:Singlet_Tensor_Basis	access:private
is_spin_degs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> is_spin_degs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
isomorphic_legs	peps_utilities/utilities.cc	/^IQIndex isomorphic_legs(const IQIndex &old_leg, const std::string &new_leg_name)$/;"	f	signature:(const IQIndex &old_leg, const std::string &new_leg_name)
isomorphic_legs	peps_utilities/utilities.cc	/^Index isomorphic_legs(const Index &old_leg, const std::string &new_leg_name)$/;"	f	signature:(const Index &old_leg, const std::string &new_leg_name)
isomorphic_legs	peps_utilities/utilities.h	/^IQIndex isomorphic_legs(const IQIndex &old_leg, const std::string &new_leg_name);$/;"	p	signature:(const IQIndex &old_leg, const std::string &new_leg_name)
isomorphic_legs	peps_utilities/utilities.h	/^Index isomorphic_legs(const Index &old_leg, const std::string &new_leg_name);$/;"	p	signature:(const Index &old_leg, const std::string &new_leg_name)
iter_nums	simple_update/trotter_gate.h	/^        int iter_nums;$/;"	m	struct:Evolution_Params	access:public
lattice	peps/double_layer_peps.h	/^        const Lattice_Base &lattice() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
lattice	peps/peps.h	/^        inline const Lattice_Base &lattice() const$/;"	f	class:PEPSt	access:public	signature:() const
lattice_	peps/peps.h	/^        const Lattice_Base &lattice_;$/;"	m	class:PEPSt	access:private
left_leg_of_combiners	peps_utilities/utilities.h	/^inline IQIndex left_leg_of_combiners(const IQCombiner &combiner, int i) { return combiner.left()[i]; }$/;"	f	signature:(const IQCombiner &combiner, int i)
left_leg_of_combiners	peps_utilities/utilities.h	/^inline Index left_leg_of_combiners(const Combiner &combiner, int i) { return combiner.left(i); }$/;"	f	signature:(const Combiner &combiner, int i)
leg	peps_utilities/cgtensor.h	/^        const IQIndex &leg() const { return sz_legs_; }$/;"	f	class:IndexSpin	access:public	signature:() const
list_from_num	peps_utilities/utilities.cc	/^std::vector<int> list_from_num(int num, const std::vector<int> &max_nums)$/;"	f	signature:(int num, const std::vector<int> &max_nums)
list_from_num	peps_utilities/utilities.h	/^std::vector<int> list_from_num(int num, const std::vector<int> &max_nums);$/;"	p	signature:(int num, const std::vector<int> &max_nums)
lower_combiners_	peps/square_double_layer_peps.h	/^        std::array<std::vector<CombinerT>,2> lower_combiners_, upper_combiners_; ;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
m	peps_utilities/cgtensor.h	/^        int m() const { return sz_legs_.m(); }$/;"	f	class:IndexSpin	access:public	signature:() const
m	peps_utilities/utilities.h	/^        int m() const { return basis_label_[1]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
main	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	build/CMakeFiles/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	execute/featureless_honeycomb_peps.cc	/^int main()$/;"	f	signature:()
main	execute/honeycomb_TPO_correlators.cc	/^int main()$/;"	f	signature:()
main	execute/honeycomb_correlators.cc	/^int main()$/;"	f	signature:()
main	test/cgtensor_test.cc	/^int main()$/;"	f	signature:()
main	test/lattice_test.cc	/^int main()$/;"	f	signature:()
main	test/peps_test.cc	/^int main()$/;"	f	signature:()
main	test/simple_update_test.cc	/^int main()$/;"	f	signature:()
main	test/small_sample_test.cc	/^int main()$/;"	f	signature:()
main	test/utilities_test.cc	/^int main()$/;"	f	signature:()
match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::match_sigma_left_right(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::match_sigma_left_right(int lr_no);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int lr_no)
match_sigma_left_right	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::match_sigma_left_right(int lr_no)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int lr_no)
match_sigma_left_right	peps/square_double_layer_peps.h	/^        void match_sigma_left_right(int lr_no=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int lr_no=1)
match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
match_sigma_lr_double_peps	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::match_sigma_lr_double_peps()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
match_sigma_lr_double_peps	peps/square_double_layer_peps.h	/^        void match_sigma_lr_double_peps();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
max_spins_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<int> max_spins_;$/;"	m	class:Singlet_Tensor_Basis	access:private
move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::array<int,2> &new_col_lr)
move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::array<int,2> &new_col_lr)
move_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::move_sigma_lr(const std::array<int,2> &new_col_lr)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::array<int,2> &new_col_lr)
move_sigma_lr	peps/square_double_layer_peps.h	/^        void move_sigma_lr(const std::array<int,2> &new_col_lr);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::array<int,2> &new_col_lr)
mu_12	peps_utilities/peps_class_params.h	/^    static const double mu_12=1;$/;"	m	namespace:Square
mu_t1T	peps_utilities/peps_class_params.h	/^    static const double mu_t1T=1;$/;"	m	namespace:Square
mu_t2c4	peps_utilities/peps_class_params.h	/^    static const double mu_t2c4=-1;$/;"	m	namespace:Square
n_bonds	peps_utilities/TPO.h	/^        int n_bonds() const { return bond_tensors_.size(); }$/;"	f	class:TPOt	access:public	signature:() const
n_bonds_to_one_site	lattice/lattice.h	/^        inline const int &n_bonds_to_one_site() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_bonds_to_one_site	peps/peps.h	/^        inline const int &n_bonds_to_one_site() const$/;"	f	class:PEPSt	access:public	signature:() const
n_bonds_to_one_site_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_bonds_total	lattice/lattice.h	/^        inline const int &n_bonds_total() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_bonds_total	peps/peps.h	/^        inline const int &n_bonds_total() const$/;"	f	class:PEPSt	access:public	signature:() const
n_bonds_total_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_bonds_uc	lattice/lattice.h	/^        inline const int &n_bonds_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_bonds_uc	peps/peps.h	/^        inline const int &n_bonds_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
n_bonds_uc_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_boundary_legs	lattice/lattice.h	/^        int n_boundary_legs() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_boundary_legs	peps/peps.h	/^        int n_boundary_legs() const$/;"	f	class:PEPSt	access:public	signature:() const
n_boundary_legs_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_sites	peps_utilities/TPO.h	/^        int n_sites() const { return site_tensors_.size(); }$/;"	f	class:TPOt	access:public	signature:() const
n_sites_total	lattice/lattice.h	/^        inline const int &n_sites_total() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_sites_total	peps/peps.h	/^        inline const int &n_sites_total() const$/;"	f	class:PEPSt	access:public	signature:() const
n_sites_total_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_sites_uc	lattice/lattice.h	/^        inline const int &n_sites_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_sites_uc	peps/peps.h	/^        inline const int &n_sites_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
n_sites_uc_	lattice/lattice.h	/^        int n_sites_uc_, n_bonds_uc_, n_bonds_to_one_site_, n_sites_total_, n_bonds_total_, n_boundary_legs_;$/;"	m	class:Lattice_Base	access:protected
n_uc	lattice/lattice.h	/^        inline const std::array<int,2> &n_uc() const$/;"	f	class:Lattice_Base	access:public	signature:() const
n_uc	peps/peps.h	/^        const std::array<int,2> &n_uc() const$/;"	f	class:PEPSt	access:public	signature:() const
n_uc_	lattice/lattice.h	/^        std::array<int,2> n_uc_;$/;"	m	class:Lattice_Base	access:protected
name	lattice/lattice.h	/^        const std::string &name() const { return name_; }$/;"	f	class:Lattice_Base	access:public	signature:() const
name	peps/peps.h	/^        const std::string &name() const$/;"	f	class:PEPSt	access:public	signature:() const
name	peps/peps_indexset.h	/^        const std::string &name() const { return name_; }$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
name_	lattice/lattice.h	/^        std::string name_;$/;"	m	class:Lattice_Base	access:protected
name_	peps/peps.h	/^        std::string name_;$/;"	m	class:PEPSt	access:private
name_	peps/peps_indexset.h	/^        std::string name_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
new_bond_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_bond_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_bond_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_bond_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_bond_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_bond_tensors()$/;"	f	class:PEPSt	signature:()
new_bond_tensors	peps/peps.h	/^        void new_bond_tensors();$/;"	p	class:PEPSt	access:public	signature:()
new_boundary_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_boundary_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_boundary_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_boundary_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_boundary_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_boundary_tensors()$/;"	f	class:PEPSt	signature:()
new_boundary_tensors	peps/peps.h	/^        void new_boundary_tensors();$/;"	p	class:PEPSt	access:public	signature:()
new_site_tensors	peps/peps.cc	/^void PEPSt<IQTensor>::new_site_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_site_tensors	peps/peps.cc	/^void PEPSt<ITensor>::new_site_tensors();$/;"	p	class:PEPSt	file:	signature:()
new_site_tensors	peps/peps.cc	/^void PEPSt<TensorT>::new_site_tensors()$/;"	f	class:PEPSt	signature:()
new_site_tensors	peps/peps.h	/^        void new_site_tensors();$/;"	p	class:PEPSt	access:public	signature:()
nondeg_spin_sym_env_updated	simple_update/simple_update_env.cc	/^std::vector<double> nondeg_spin_sym_env_updated(const IQTensor &tens_A, const IQTensor &tens_B)$/;"	f	signature:(const IQTensor &tens_A, const IQTensor &tens_B)
nondeg_spin_sym_env_updated	simple_update/simple_update_env.h	/^std::vector<double> nondeg_spin_sym_env_updated(const IQTensor &tens_A, const IQTensor &tens_B);$/;"	p	signature:(const IQTensor &tens_A, const IQTensor &tens_B)
num_from_list	peps_utilities/utilities.cc	/^int num_from_list(const std::vector<int> &list, const std::vector<int> &max_nums)$/;"	f	signature:(const std::vector<int> &list, const std::vector<int> &max_nums)
num_from_list	peps_utilities/utilities.h	/^int num_from_list(const std::vector<int> &list, const std::vector<int> &max_nums);$/;"	p	signature:(const std::vector<int> &list, const std::vector<int> &max_nums)
obtain_CG	peps_utilities/cgtensor.cc	/^IQTensor CGTensors::obtain_CG(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)$/;"	f	class:CGTensors	signature:(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)
obtain_CG	peps_utilities/cgtensor.h	/^        IQTensor obtain_CG(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3);$/;"	p	class:CGTensors	access:public	signature:(const IndexSpin &S1, const IndexSpin &S2, const IndexSpin &S3)
obtain_K	peps_utilities/cgtensor.cc	/^bool CGTensors::obtain_K(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)$/;"	f	class:CGTensors	signature:(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)
obtain_K	peps_utilities/cgtensor.h	/^        bool obtain_K(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K);$/;"	p	class:CGTensors	access:public	signature:(const std::vector<IndexSpin> &out_spin_legs, const std::vector<IndexSpin> &in_spin_legs, std::vector<IQTensor> &K)
obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
obtain_boundary_theory_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_boundary_theory_iterative()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
obtain_boundary_theory_iterative	peps/square_double_layer_peps.h	/^        void obtain_boundary_theory_iterative();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<IQTensor> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<int> &acting_sites_list, const std::vector<IQTensor> &direct_prod_operators)
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<IQTensor>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<IQTensor>> &tensor_prod_operators)
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<ITensor> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<int> &acting_sites_list, const std::vector<ITensor> &direct_prod_operators)
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<ITensor>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<ITensor>> &tensor_prod_operators)
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)
obtain_correlators	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)
obtain_correlators	peps/square_double_layer_peps.h	/^        double obtain_correlators(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<int> &acting_sites_list, const std::vector<TensorT> &direct_prod_operators)
obtain_correlators	peps/square_double_layer_peps.h	/^        double obtain_correlators(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<std::vector<int>> &acting_sites_list, const std::vector<TPOt<TensorT>> &tensor_prod_operators)
obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
obtain_density_matrix_spectrum	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_density_matrix_spectrum()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
obtain_density_matrix_spectrum	peps/square_double_layer_peps.h	/^        void obtain_density_matrix_spectrum();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_layered_tensors_with_combined_legs()$/;"	f	class:Double_Layer_PEPSt	signature:()
obtain_layered_tensors_with_combined_legs	peps/double_layer_peps.h	/^        void obtain_layered_tensors_with_combined_legs();$/;"	p	class:Double_Layer_PEPSt	access:public	signature:()
obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_peps_sandwich_single_site_operators(std::vector<IQTensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<IQTensor>& sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<IQTensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<IQTensor>& sandwiched_tensors)
obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_peps_sandwich_single_site_operators(std::vector<ITensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<ITensor>& sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<ITensor> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<ITensor>& sandwiched_tensors)
obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_peps_sandwich_single_site_operators(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT>& sandwiched_tensors)$/;"	f	class:Double_Layer_PEPSt	signature:(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT>& sandwiched_tensors)
obtain_peps_sandwich_single_site_operators	peps/double_layer_peps.h	/^        void obtain_peps_sandwich_single_site_operators(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::vector<TensorT> direct_prod_operators, const std::vector<int> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<IQTensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<IQTensor> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<TPOt<IQTensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<IQTensor> &sandwiched_tensors)
obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<ITensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<ITensor> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::vector<TPOt<ITensor>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<ITensor> &sandwiched_tensors)
obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)$/;"	f	class:Double_Layer_PEPSt	signature:(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
obtain_peps_sandwich_tensor_prod_operators	peps/double_layer_peps.h	/^        void obtain_peps_sandwich_tensor_prod_operators(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::vector<TPOt<TensorT>> tensor_prod_operators, const std::vector<std::vector<int>> &acting_sites_list, std::vector<TensorT> &sandwiched_tensors)
obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int left_end_col, int right_end_col)
obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int left_end_col, int right_end_col)
obtain_sigma_lr_iterative	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_sigma_lr_iterative(int left_end_col, int right_end_col)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int left_end_col, int right_end_col)
obtain_sigma_lr_iterative	peps/square_double_layer_peps.h	/^        void obtain_sigma_lr_iterative(int left_end_col, int right_end_col);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int left_end_col, int right_end_col)
obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	file:	signature:()
obtain_single_layer_tensors	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::obtain_single_layer_tensors()$/;"	f	class:Double_Layer_PEPSt	signature:()
obtain_single_layer_tensors	peps/double_layer_peps.h	/^        void obtain_single_layer_tensors();$/;"	p	class:Double_Layer_PEPSt	access:public	signature:()
obtain_singlet_tensor_params	peps_utilities/singlet_tensor_basis.cc	/^void obtain_singlet_tensor_params(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<Complex> &params)$/;"	f	signature:(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<Complex> &params)
obtain_singlet_tensor_params	peps_utilities/singlet_tensor_basis.cc	/^void obtain_singlet_tensor_params(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<double> &params)$/;"	f	signature:(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<double> &params)
obtain_singlet_tensor_params	peps_utilities/singlet_tensor_basis.h	/^void obtain_singlet_tensor_params(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<Complex> &params);$/;"	p	signature:(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<Complex> &params)
obtain_singlet_tensor_params	peps_utilities/singlet_tensor_basis.h	/^void obtain_singlet_tensor_params(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<double> &params);$/;"	p	signature:(const IQTensor &singlet_tensor, const Singlet_Tensor_Basis &tensor_basis, std::vector<double> &params)
obtain_spin_sym_leg_gates_params	simple_update/simple_update.cc	/^void obtain_spin_sym_leg_gates_params(const std::array<IQTensor,2> &site_tensors, const IQTensor &bond_tensor, Trotter_Gate &evolve_gate, const std::array<Singlet_Tensor_Basis,2> &leg_gates_basis, std::vector<double> &leg_gate_params)$/;"	f	signature:(const std::array<IQTensor,2> &site_tensors, const IQTensor &bond_tensor, Trotter_Gate &evolve_gate, const std::array<Singlet_Tensor_Basis,2> &leg_gates_basis, std::vector<double> &leg_gate_params)
obtain_spin_sym_leg_gates_params	simple_update/simple_update.h	/^void obtain_spin_sym_leg_gates_params(const std::array<IQTensor,2> &site_tensors, const IQTensor &bond_tensor, Trotter_Gate &trotter_gate, const std::array<Singlet_Tensor_Basis,2> &leg_gates_basis, std::vector<double> &leg_gate_params);$/;"	p	signature:(const std::array<IQTensor,2> &site_tensors, const IQTensor &bond_tensor, Trotter_Gate &trotter_gate, const std::array<Singlet_Tensor_Basis,2> &leg_gates_basis, std::vector<double> &leg_gate_params)
obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::obtain_transfer_matrix(int coli);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli)
obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::obtain_transfer_matrix(int coli);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli)
obtain_transfer_matrix	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::obtain_transfer_matrix(int coli)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int coli)
obtain_transfer_matrix	peps/square_double_layer_peps.h	/^        void obtain_transfer_matrix(int coli=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int coli=1)
operator ()	peps_utilities/cgtensor.h	/^        IQIndexVal operator()(int n) const$/;"	f	class:IndexSpin	access:public	signature:(int n) const
operator ()	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &operator()(int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
operator <<	peps_utilities/TPO.h	/^std::ostream &operator<<(std::ostream &s, const TPOt<TensorT> &T)$/;"	f	signature:(std::ostream &s, const TPOt<TensorT> &T)
operator <<	peps_utilities/cgtensor.h	/^inline std::ostream &operator<<(std::ostream &s, const CGTensors &cg_tensors)$/;"	f	signature:(std::ostream &s, const CGTensors &cg_tensors)
operator <<	peps_utilities/cgtensor.h	/^inline std::ostream &operator<<(std::ostream &s, const IndexSpin &indspin)$/;"	f	signature:(std::ostream &s, const IndexSpin &indspin)
operator <<	peps_utilities/singlet_tensor_basis.h	/^inline std::ostream &operator<<(std::ostream &s, const Singlet_Tensor_Basis &tensor_basis)$/;"	f	signature:(std::ostream &s, const Singlet_Tensor_Basis &tensor_basis)
operator <<	peps_utilities/utilities.h	/^inline std::ostream &operator<<(std::ostream &s, const Coordinate &coord)$/;"	f	signature:(std::ostream &s, const Coordinate &coord)
operator <<	peps_utilities/utilities.h	/^inline std::ostream &operator<<(std::ostream &s, const Spin_Basis &spin_basis)$/;"	f	signature:(std::ostream &s, const Spin_Basis &spin_basis)
operator <<	peps_utilities/utilities.h	/^inline std::ostream &operator<<(std::ostream &s, const std::vector<int> &ivec)$/;"	f	signature:(std::ostream &s, const std::vector<int> &ivec)
operator ==	peps_utilities/utilities.h	/^        bool operator==(const Spin_Basis &other)$/;"	f	class:Spin_Basis	access:public	signature:(const Spin_Basis &other)
operator []	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &operator[](int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
phys_leg	peps/double_layer_peps.h	/^        const IndexT &phys_leg(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
phys_legs	peps/peps.h	/^        inline const IndexT &phys_legs(const int &site_i) const$/;"	f	class:PEPSt	access:public	signature:(const int &site_i) const
phys_legs	peps/peps_indexset.h	/^        const IndexT &phys_legs(const int &site_i) const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:(const int &site_i) const
phys_legs	peps/peps_indexset.h	/^        const std::vector<IndexT> &phys_legs() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
phys_legs	peps_utilities/TPO.h	/^        IndexT phys_legs(int i)$/;"	f	class:TPOt	access:public	signature:(int i)
phys_legs_	peps/peps_indexset.h	/^        std::vector<IndexT> phys_legs_, virt_legs_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
phys_legs_	simple_update/trotter_gate.h	/^        std::array<std::array<IQIndex,2>,2> phys_legs_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
phys_legs_	simple_update/trotter_gate.h	/^        std::vector<std::array<IQIndex,2>> phys_legs_;$/;"	m	class:Trotter_Gate	access:protected
print_lattice_inf	lattice/lattice.cc	/^void Lattice_Base::print_lattice_inf()$/;"	f	class:Lattice_Base	signature:()
print_lattice_inf	lattice/lattice.cc	/^void Square_Lattice_Torus::print_lattice_inf()$/;"	f	class:Square_Lattice_Torus	signature:()
print_lattice_inf	lattice/lattice.h	/^        virtual void print_lattice_inf();$/;"	p	class:Square_Lattice_Torus	access:public	signature:()
print_lattice_inf	lattice/lattice.h	/^        void print_lattice_inf();$/;"	p	class:Lattice_Base	access:public	signature:()
print_vector_nonzero_elem	peps/square_double_layer_peps.h	/^        void print_vector_nonzero_elem(TensorT vector, int nonzero_elem_num)$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(TensorT vector, int nonzero_elem_num)
randomize_spin_sym_square_peps	peps/peps.cc	/^void randomize_spin_sym_square_peps(IQPEPS &spin_peps)$/;"	f	signature:(IQPEPS &spin_peps)
randomize_spin_sym_square_peps	peps/peps.h	/^void randomize_spin_sym_square_peps(IQPEPS &square_peps);$/;"	p	signature:(IQPEPS &square_peps)
read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::istream &s)
read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::istream &s)
read	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:Double_Layer_PEPSt	signature:(std::istream &s)
read	peps/double_layer_peps.h	/^        void read(std::istream &s);$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::istream &s)
read	peps/peps.cc	/^void PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:PEPSt	file:	signature:(std::istream &s)
read	peps/peps.cc	/^void PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:PEPSt	file:	signature:(std::istream &s)
read	peps/peps.cc	/^void PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:PEPSt	signature:(std::istream &s)
read	peps/peps.h	/^        void read(std::istream &s);$/;"	p	class:PEPSt	access:public	signature:(std::istream &s)
read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IQIndex>::read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::istream &s)
read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<Index>::read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::istream &s)
read	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IndexT>::read(std::istream &s)$/;"	f	class:PEPSt_IndexSet_Base	signature:(std::istream &s)
read	peps/peps_indexset.h	/^        void read(std::istream &s);$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(std::istream &s)
read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::istream &s)
read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::istream &s)
read	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::read(std::istream &s)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(std::istream &s)
read	peps/square_double_layer_peps.h	/^        void read(std::istream &s);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(std::istream &s)
read	peps_utilities/tnetwork_storage.h	/^  void read(std::istream& s){$/;"	f	class:Tnetwork_Storage	access:public	signature:(std::istream& s)
recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
recombine_sigma_lr	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::recombine_sigma_lr()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
recombine_sigma_lr	peps/square_double_layer_peps.h	/^        void recombine_sigma_lr();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<IQTensor>::sandwiched_peps_norm(const std::vector<IQTensor> &sandwiched_tensors, int horizontal_dir);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<IQTensor> &sandwiched_tensors, int horizontal_dir)
sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<ITensor>::sandwiched_peps_norm(const std::vector<ITensor> &sandwiched_tensors, int horizontal_dir);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(const std::vector<ITensor> &sandwiched_tensors, int horizontal_dir)
sandwiched_peps_norm	peps/square_double_layer_peps.cc	/^double Square_Double_Layer_PEPSt<TensorT>::sandwiched_peps_norm(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir)
sandwiched_peps_norm	peps/square_double_layer_peps.h	/^        double sandwiched_peps_norm(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir=1);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(const std::vector<TensorT> &sandwiched_tensors, int horizontal_dir=1)
sigma_b_	peps/square_double_layer_peps.h	/^        ITensor sigma_b_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
sigma_lr	peps/square_double_layer_peps.h	/^        const TensorT &sigma_lr(int i) const { return sigma_lr_[i]; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:(int i) const
sigma_lr	peps/square_double_layer_peps.h	/^        const std::array<TensorT,2> &sigma_lr() const { return sigma_lr_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
sigma_lr_	peps/square_double_layer_peps.h	/^        std::array<TensorT,2> sigma_lr_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
single_layer_peps_	peps/double_layer_peps.h	/^        PEPSt<TensorT> single_layer_peps_;$/;"	m	class:Double_Layer_PEPSt	access:protected
single_layer_tensors_	peps/double_layer_peps.h	/^        std::vector<TensorT> single_layer_tensors_;$/;"	m	class:Double_Layer_PEPSt	access:protected
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.cc	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const arma::Col<double> &params)$/;"	f	signature:(const Singlet_Tensor_Basis &tensor_basis, const arma::Col<double> &params)
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.cc	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const std::vector<Complex> &params)$/;"	f	signature:(const Singlet_Tensor_Basis &tensor_basis, const std::vector<Complex> &params)
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.cc	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const std::vector<double> &params)$/;"	f	signature:(const Singlet_Tensor_Basis &tensor_basis, const std::vector<double> &params)
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.h	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const arma::Col<double> &params);$/;"	p	signature:(const Singlet_Tensor_Basis &tensor_basis, const arma::Col<double> &params)
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.h	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const std::vector<Complex> &params);$/;"	p	signature:(const Singlet_Tensor_Basis &tensor_basis, const std::vector<Complex> &params)
singlet_tensor_from_basis_params	peps_utilities/singlet_tensor_basis.h	/^IQTensor singlet_tensor_from_basis_params(const Singlet_Tensor_Basis &tensor_basis, const std::vector<double> &params);$/;"	p	signature:(const Singlet_Tensor_Basis &tensor_basis, const std::vector<double> &params)
singlet_tensors_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<IQTensor> singlet_tensors_;$/;"	m	class:Singlet_Tensor_Basis	access:private
site_coord_to_list	lattice/lattice.h	/^        const int &site_coord_to_list(int x, int y, int subsite) const$/;"	f	class:Lattice_Base	access:public	signature:(int x, int y, int subsite) const
site_coord_to_list	lattice/lattice.h	/^        inline const int &site_coord_to_list(Coordinate site_coord) const$/;"	f	class:Lattice_Base	access:public	signature:(Coordinate site_coord) const
site_coord_to_list_	lattice/lattice.h	/^        std::vector<std::vector<std::vector<int>>> site_coord_to_list_, bond_coord_to_list_;$/;"	m	class:Lattice_Base	access:protected
site_list_to_coord	lattice/lattice.h	/^        Coordinate site_list_to_coord(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
site_list_to_coord_	lattice/lattice.h	/^        std::vector<Coordinate> site_list_to_coord_, bond_list_to_coord_;$/;"	m	class:Lattice_Base	access:protected
site_neighbour_bonds	lattice/lattice.h	/^        inline const int &site_neighbour_bonds(const int &site_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i, const int &j) const
site_neighbour_bonds	lattice/lattice.h	/^        inline const std::vector<int> &site_neighbour_bonds(const int &site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i) const
site_neighbour_bonds_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_sites_, site_neighbour_bonds_;$/;"	m	class:Lattice_Base	access:protected
site_neighbour_boundary	lattice/lattice.h	/^        const std::vector<int> &site_neighbour_boundary(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
site_neighbour_boundary	lattice/lattice.h	/^        int site_neighbour_boundary(int site_i, int j) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i, int j) const
site_neighbour_boundary_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_boundary_;$/;"	m	class:Lattice_Base	access:protected
site_neighbour_sites	lattice/lattice.h	/^        const int &site_neighbour_sites(const int &site_i, const int &j) const$/;"	f	class:Lattice_Base	access:public	signature:(const int &site_i, const int &j) const
site_neighbour_sites	lattice/lattice.h	/^        const std::vector<int> &site_neighbour_sites(int site_i) const$/;"	f	class:Lattice_Base	access:public	signature:(int site_i) const
site_neighbour_sites_	lattice/lattice.h	/^        std::vector<std::vector<int>> site_neighbour_sites_, site_neighbour_bonds_;$/;"	m	class:Lattice_Base	access:protected
site_tensors	peps/peps.h	/^        TensorT &site_tensors(int i)$/;"	f	class:PEPSt	access:public	signature:(int i)
site_tensors	peps/peps.h	/^        inline const TensorT &site_tensors(int i) const$/;"	f	class:PEPSt	access:public	signature:(int i) const
site_tensors	peps/peps.h	/^        inline const std::vector<TensorT> &site_tensors() const$/;"	f	class:PEPSt	access:public	signature:() const
site_tensors	peps_utilities/TPO.h	/^        TensorT &site_tensors(int i) { return site_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i)
site_tensors	peps_utilities/TPO.h	/^        const TensorT &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:TPOt	access:public	signature:(int i) const
site_tensors	peps_utilities/TPO.h	/^        const std::vector<TensorT> &site_tensors() const { return site_tensors_; }$/;"	f	class:TPOt	access:public	signature:() const
site_tensors	peps_utilities/TPO.h	/^        std::vector<TensorT> &site_tensors() { return site_tensors_; }$/;"	f	class:TPOt	access:public	signature:()
site_tensors	simple_update/trotter_gate.h	/^        const IQTensor &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:NN_Heisenberg_Hamiltonian	access:public	signature:(int i) const
site_tensors	simple_update/trotter_gate.h	/^        const IQTensor &site_tensors(int i) const { return site_tensors_[i]; }$/;"	f	class:Trotter_Gate	access:public	signature:(int i) const
site_tensors	simple_update/trotter_gate.h	/^        const std::vector<IQTensor> &site_tensors() const { return site_tensors_; }$/;"	f	class:Trotter_Gate	access:public	signature:() const
site_tensors_	peps/peps.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_; $/;"	m	class:PEPSt	access:private
site_tensors_	peps_utilities/TPO.h	/^        std::vector<TensorT> site_tensors_, bond_tensors_;$/;"	m	class:TPOt	access:private
site_tensors_	simple_update/trotter_gate.h	/^        std::array<IQTensor,2> site_tensors_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
site_tensors_	simple_update/trotter_gate.h	/^        std::vector<IQTensor> site_tensors_;$/;"	m	class:Trotter_Gate	access:protected
snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
snake_walking_boundary_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::snake_walking_boundary_col()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
snake_walking_boundary_col	peps/square_double_layer_peps.h	/^        void snake_walking_boundary_col();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize);$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
snake_walking_bulk_col	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)$/;"	f	class:Square_Double_Layer_PEPSt	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize)
snake_walking_bulk_col	peps/square_double_layer_peps.h	/^        void snake_walking_bulk_col(int coli, int horizontal_dir, int vertical_dir, bool do_normalize=false);$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(int coli, int horizontal_dir, int vertical_dir, bool do_normalize=false)
spin_	peps_utilities/cgtensor.h	/^        int spin_;$/;"	m	class:IndexSpin	access:private
spin_configs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &spin_configs(int i) const { return spin_configs_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
spin_configs_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<int>> spin_configs_;$/;"	m	class:Singlet_Tensor_Basis	access:private
spin_deg_list_to_basis_no	peps_utilities/singlet_tensor_basis.h	/^        int spin_deg_list_to_basis_no(const std::vector<int> &spin_list, const std::vector<int> &deg_list, int fusion_channel=0)$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(const std::vector<int> &spin_list, const std::vector<int> &deg_list, int fusion_channel=0)
spin_deg_list_to_num_	peps_utilities/singlet_tensor_basis.h	/^        std::vector<std::vector<std::vector<int>>> spin_deg_list_to_num_;$/;"	m	class:Singlet_Tensor_Basis	access:private
spin_degs	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<int> &spin_degs(int legi) const { return is_spin_degs_[legi]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int legi) const
spin_indices	peps_utilities/cgtensor.h	/^        const std::vector<IndexSpin> &spin_indices() const { return spin_legs_; }$/;"	f	class:CGTensors	access:public	signature:() const
spin_legs_	peps_utilities/cgtensor.h	/^        std::vector<IndexSpin> spin_legs_;$/;"	m	class:CGTensors	access:private
spin_qn	peps_utilities/cgtensor.h	/^        int spin_qn() const { return spin_; }$/;"	f	class:IndexSpin	access:public	signature:() const
spin_square_peps_simple_update	simple_update/simple_update.cc	/^void spin_square_peps_simple_update(IQPEPS &square_peps, const Evolution_Params &square_su_params)$/;"	f	signature:(IQPEPS &square_peps, const Evolution_Params &square_su_params)
spin_square_peps_simple_update	simple_update/simple_update.h	/^void spin_square_peps_simple_update(IQPEPS &square_peps, const Evolution_Params &square_su_params);$/;"	p	signature:(IQPEPS &square_peps, const Evolution_Params &square_su_params)
spin_sym_square_peps_from_honeycomb_tensor_uc	peps_ansatz/transfer_to_square.cc	/^IQPEPS spin_sym_square_peps_from_honeycomb_tensor_uc(const std::vector<IQTensor> &honeycomb_site_tensors_uc, const std::vector<IQTensor> &honeycomb_bond_tensors_uc, const Lattice_Base &square_lattice)$/;"	f	signature:(const std::vector<IQTensor> &honeycomb_site_tensors_uc, const std::vector<IQTensor> &honeycomb_bond_tensors_uc, const Lattice_Base &square_lattice)
spin_sym_square_peps_from_honeycomb_tensor_uc	peps_ansatz/transfer_to_square.h	/^IQPEPS spin_sym_square_peps_from_honeycomb_tensor_uc(const std::vector<IQTensor> &honeycomb_site_tensors_uc, const std::vector<IQTensor> &honeycomb_bond_tensors_uc, const Lattice_Base &square_lattice);$/;"	p	signature:(const std::vector<IQTensor> &honeycomb_site_tensors_uc, const std::vector<IQTensor> &honeycomb_bond_tensors_uc, const Lattice_Base &square_lattice)
spin_to_sz	peps_utilities/utilities.cc	/^void spin_to_sz(const std::vector<int> &spin_deg, std::vector<int> &sz_deg)$/;"	f	signature:(const std::vector<int> &spin_deg, std::vector<int> &sz_deg)
spin_to_sz	peps_utilities/utilities.h	/^void spin_to_sz(const std::vector<int> &spin_deg, std::vector<int> &sz_deg);$/;"	p	signature:(const std::vector<int> &spin_deg, std::vector<int> &sz_deg)
steps_nums	simple_update/trotter_gate.h	/^        std::vector<int> steps_nums;$/;"	m	struct:Evolution_Params	access:public
sz_legs_	peps_utilities/cgtensor.h	/^        IQIndex sz_legs_;$/;"	m	class:IndexSpin	access:private
sz_to_spin	peps_utilities/utilities.cc	/^bool sz_to_spin(const std::vector<int> &sz_deg, std::vector<int> &spin_deg)$/;"	f	signature:(const std::vector<int> &sz_deg, std::vector<int> &spin_deg)
sz_to_spin	peps_utilities/utilities.h	/^bool sz_to_spin(const std::vector<int> &sz_deg, std::vector<int> &spin_deg);$/;"	p	signature:(const std::vector<int> &sz_deg, std::vector<int> &spin_deg)
t	peps_utilities/utilities.h	/^        int t() const { return basis_label_[2]; }$/;"	f	class:Spin_Basis	access:public	signature:() const
t	simple_update/trotter_gate.h	/^        double t() { return t_; }$/;"	f	class:Trotter_Gate	access:public	signature:()
t_	simple_update/trotter_gate.h	/^        double t_;$/;"	m	class:Trotter_Gate	access:protected
tensor	peps_utilities/singlet_tensor_basis.h	/^        const IQTensor &tensor(int i) const { return singlet_tensors_[i]; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:(int i) const
tensor_assignment	peps_utilities/utilities.cc	/^void tensor_assignment(IQTensor &TA, const IQTensor &TB)$/;"	f	signature:(IQTensor &TA, const IQTensor &TB)
tensor_assignment	peps_utilities/utilities.cc	/^void tensor_assignment(ITensor &TA, const ITensor &TB)$/;"	f	signature:(ITensor &TA, const ITensor &TB)
tensor_assignment	peps_utilities/utilities.h	/^void tensor_assignment(IQTensor &TA, const IQTensor &TB);$/;"	p	signature:(IQTensor &TA, const IQTensor &TB)
tensor_assignment	peps_utilities/utilities.h	/^void tensor_assignment(ITensor &TA, const ITensor &TB);$/;"	p	signature:(ITensor &TA, const ITensor &TB)
tensors	peps_utilities/singlet_tensor_basis.h	/^        const std::vector<IQTensor> &tensors() const { return singlet_tensors_; }$/;"	f	class:Singlet_Tensor_Basis	access:public	signature:() const
toITensor	peps_utilities/utilities.h	/^inline ITensor toITensor(const IQTensor &tensor) { return tensor.toITensor(); }$/;"	f	signature:(const IQTensor &tensor)
toITensor	peps_utilities/utilities.h	/^inline ITensor toITensor(const ITensor &tensor) { return tensor; }$/;"	f	signature:(const ITensor &tensor)
transfer_mat	peps/square_double_layer_peps.h	/^        const TensorT &transfer_mat() const { return transfer_mat_; }$/;"	f	class:Square_Double_Layer_PEPSt	access:public	signature:() const
transfer_mat_	peps/square_double_layer_peps.h	/^        TensorT transfer_mat_;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<IQTensor>::transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<ITensor>::transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:()
transfer_matrix_eigvals	peps/square_double_layer_peps.cc	/^std::vector<Complex> Square_Double_Layer_PEPSt<TensorT>::transfer_matrix_eigvals()$/;"	f	class:Square_Double_Layer_PEPSt	signature:()
transfer_matrix_eigvals	peps/square_double_layer_peps.h	/^        std::vector<Complex> transfer_matrix_eigvals();$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:()
ts	simple_update/trotter_gate.h	/^        std::vector<double> ts;$/;"	m	struct:Evolution_Params	access:public
upper_combiners_	peps/square_double_layer_peps.h	/^        std::array<std::vector<CombinerT>,2> lower_combiners_, upper_combiners_; ;$/;"	m	class:Square_Double_Layer_PEPSt	access:private
valid	peps_utilities/cgtensor.h	/^        bool valid() { return valid_; }$/;"	f	class:CGTensors	access:public	signature:()
valid	peps_utilities/cgtensor.h	/^        bool valid()$/;"	f	class:IndexSpin	access:public	signature:()
valid_	peps_utilities/cgtensor.h	/^        bool valid_;$/;"	m	class:CGTensors	access:private
vectorSpinChirality	peps_utilities/TPO.cc	/^std::array<IQTPO,3> vectorSpinChirality()$/;"	f	signature:()
vectorSpinChirality	peps_utilities/TPO.cc	/^std::array<IQTPO,3> vectorSpinChirality(const std::array<IQIndex,2> &phys_legs)$/;"	f	signature:(const std::array<IQIndex,2> &phys_legs)
vectorSpinChirality	peps_utilities/TPO.h	/^std::array<IQTPO,3> vectorSpinChirality();$/;"	p	signature:()
vectorSpinChirality	peps_utilities/TPO.h	/^std::array<IQTPO,3> vectorSpinChirality(const std::array<IQIndex,2> &phys_legs);$/;"	p	signature:(const std::array<IQIndex,2> &phys_legs)
virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(const std::array<int,2> &sites_no) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(const std::array<int,2> &sites_no) const
virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(int sitei, const IndexT &double_virt_ind) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei, const IndexT &double_virt_ind) const
virt_leg_combiners	peps/double_layer_peps.h	/^        const CombinerT &virt_leg_combiners(int sitei, int j) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei, int j) const
virt_leg_combiners	peps/double_layer_peps.h	/^        const std::vector<CombinerT> &virt_leg_combiners(int sitei) const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:(int sitei) const
virt_leg_combiners	peps/double_layer_peps.h	/^        const std::vector<std::vector<CombinerT>> &virt_leg_combiners() const$/;"	f	class:Double_Layer_PEPSt	access:public	signature:() const
virt_leg_combiners_	peps/double_layer_peps.h	/^        std::vector<std::vector<CombinerT>> virt_leg_combiners_;$/;"	m	class:Double_Layer_PEPSt	access:protected
virt_legs	peps/peps.h	/^        inline const IndexT &virt_legs(const int &leg_i) const$/;"	f	class:PEPSt	access:public	signature:(const int &leg_i) const
virt_legs	peps/peps_indexset.h	/^        const IndexT &virt_legs(const int &leg_i) const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:(const int &leg_i) const
virt_legs	peps/peps_indexset.h	/^        const std::vector<IndexT> &virt_legs() const$/;"	f	class:PEPSt_IndexSet_Base	access:public	signature:() const
virt_legs_	peps/peps_indexset.h	/^        std::vector<IndexT> phys_legs_, virt_legs_;$/;"	m	class:PEPSt_IndexSet_Base	access:protected
virt_legs_	simple_update/trotter_gate.h	/^        std::array<IQIndex,2> virt_legs_;$/;"	m	class:NN_Heisenberg_Hamiltonian	access:private
virt_legs_	simple_update/trotter_gate.h	/^        std::vector<std::vector<IQIndex>> virt_legs_;$/;"	m	class:Trotter_Gate	access:protected
write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
write	peps/double_layer_peps.cc	/^void Double_Layer_PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:Double_Layer_PEPSt	signature:(std::ostream &s) const
write	peps/double_layer_peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:Double_Layer_PEPSt	access:public	signature:(std::ostream &s) const
write	peps/peps.cc	/^void PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:PEPSt	file:	signature:(std::ostream &s) const
write	peps/peps.cc	/^void PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:PEPSt	file:	signature:(std::ostream &s) const
write	peps/peps.cc	/^void PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:PEPSt	signature:(std::ostream &s) const
write	peps/peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:PEPSt	access:public	signature:(std::ostream &s) const
write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IQIndex>::write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::ostream &s) const
write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<Index>::write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	file:	signature:(std::ostream &s) const
write	peps/peps_indexset.cc	/^void PEPSt_IndexSet_Base<IndexT>::write(std::ostream &s) const$/;"	f	class:PEPSt_IndexSet_Base	signature:(std::ostream &s) const
write	peps/peps_indexset.h	/^        void write(std::ostream &s) const;$/;"	p	class:PEPSt_IndexSet_Base	access:public	signature:(std::ostream &s) const
write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<IQTensor>::write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<ITensor>::write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	file:	signature:(std::ostream &s) const
write	peps/square_double_layer_peps.cc	/^void Square_Double_Layer_PEPSt<TensorT>::write(std::ostream &s) const$/;"	f	class:Square_Double_Layer_PEPSt	signature:(std::ostream &s) const
write	peps/square_double_layer_peps.h	/^        void write(std::ostream &s) const;$/;"	p	class:Square_Double_Layer_PEPSt	access:public	signature:(std::ostream &s) const
write	peps_utilities/tnetwork_storage.h	/^  void write(std::ostream& s) const{$/;"	f	class:Tnetwork_Storage	access:public	signature:(std::ostream& s) const
